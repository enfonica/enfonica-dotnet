// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enfonica/messaging/v1/messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Enfonica.Messaging.V1 {

  /// <summary>Holder for reflection information generated from enfonica/messaging/v1/messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for enfonica/messaging/v1/messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRlbmZvbmljYS9tZXNzYWdpbmcvdjEvbWVzc2FnZXMucHJvdG8SFWVuZm9u",
            "aWNhLm1lc3NhZ2luZy52MRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxofZ29vZ2xlL2Fw",
            "aS9maWVsZF9iZWhhdmlvci5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJv",
            "dG8aF2dvb2dsZS90eXBlL21vbmV5LnByb3RvIr0KCgdNZXNzYWdlEgwKBG5h",
            "bWUYASABKAkSCgoCdG8YAiABKAkSDAoEZnJvbRgDIAEoCRIMCgRib2R5GAQg",
            "ASgJEhkKEXN0YXR1c191cGRhdGVfdXJsGAUgASgJEhEKCXJlcGx5X3VybBgG",
            "IAEoCRIfChd2YWxpZGl0eV9wZXJpb2Rfc2Vjb25kcxgHIAEoBRIWCg5zbWFy",
            "dF9lbmNvZGluZxgIIAEoCBI6CgZsYWJlbHMYFCADKAsyKi5lbmZvbmljYS5t",
            "ZXNzYWdpbmcudjEuTWVzc2FnZS5MYWJlbHNFbnRyeRJMCg5jbGFzc2lmaWNh",
            "dGlvbhgVIAEoDjI0LmVuZm9uaWNhLm1lc3NhZ2luZy52MS5NZXNzYWdlLk1l",
            "c3NhZ2VDbGFzc2lmaWNhdGlvbhJfChx1bnN1YnNjcmliZV9jb250ZW50X2Jl",
            "aGF2aW9yGBYgASgOMjkuZW5mb25pY2EubWVzc2FnaW5nLnYxLk1lc3NhZ2Uu",
            "VW5zdWJzY3JpYmVDb250ZW50QmVoYXZpb3ISOwoJZGlyZWN0aW9uGAogASgO",
            "MiguZW5mb25pY2EubWVzc2FnaW5nLnYxLk1lc3NhZ2UuRGlyZWN0aW9uEhIK",
            "CmVycm9yX2NvZGUYCyABKAkSFQoNZXJyb3JfbWVzc2FnZRgMIAEoCRIVCg1z",
            "ZWdtZW50X2NvdW50GA0gASgFEiEKBXByaWNlGA4gASgLMhIuZ29vZ2xlLnR5",
            "cGUuTW9uZXkSNQoGc3RhdHVzGA8gASgOMiUuZW5mb25pY2EubWVzc2FnaW5n",
            "LnYxLk1lc3NhZ2UuU3RhdHVzEhcKD2NyZWF0ZV9pZGVudGl0eRgQIAEoCRIv",
            "CgtjcmVhdGVfdGltZRgRIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASLQoJc2VuZF90aW1lGBIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIwCgxkZWxpdmVyX3RpbWUYEyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEkAKCGVuY29kaW5nGBcgASgOMi4uZW5mb25pY2EubWVzc2Fn",
            "aW5nLnYxLk1lc3NhZ2UuTWVzc2FnZUVuY29kaW5nGi0KC0xhYmVsc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEieQoGU3RhdHVzEhIK",
            "DlNUQVRVU19VTktOT1dOEAASCgoGUVVFVUVEEAESCwoHU0VORElORxACEggK",
            "BFNFTlQQAxIKCgZGQUlMRUQQBBINCglERUxJVkVSRUQQBRIPCgtVTkRFTElW",
            "RVJFRBAGEgwKCFJFQ0VJVkVEEAciPgoJRGlyZWN0aW9uEhUKEURJUkVDVElP",
            "Tl9VTktOT1dOEAASDAoIT1VUR09JTkcQARIMCghJTkNPTUlORxACIlwKFU1l",
            "c3NhZ2VDbGFzc2lmaWNhdGlvbhIPCgtVTlNQRUNJRklFRBAAEhAKDFVOQ0xB",
            "U1NJRklFRBABEhEKDVRSQU5TQUNUSU9OQUwQAhINCglNQVJLRVRJTkcQAyJX",
            "ChpVbnN1YnNjcmliZUNvbnRlbnRCZWhhdmlvchIfChtVTlNVQlNDUklCRV9D",
            "T05URU5UX1VOS05PV04QABIICgROT05FEAESDgoKQVBQRU5EX1VSTBACIkMK",
            "D01lc3NhZ2VFbmNvZGluZxIcChhNRVNTQUdFX0VOQ09ESU5HX1VOS05PV04Q",
            "ABIICgRHU003EAESCAoEVUNTMhACImEKFENyZWF0ZU1lc3NhZ2VSZXF1ZXN0",
            "EhMKBnBhcmVudBgBIAEoCUID4EECEjQKB21lc3NhZ2UYAiABKAsyHi5lbmZv",
            "bmljYS5tZXNzYWdpbmcudjEuTWVzc2FnZUID4EECIiYKEUdldE1lc3NhZ2VS",
            "ZXF1ZXN0EhEKBG5hbWUYASABKAlCA+BBAiK5AQoTTGlzdE1lc3NhZ2VzUmVx",
            "dWVzdBITCgZwYXJlbnQYASABKAlCA+BBAhIRCglwYWdlX3NpemUYAiABKAUS",
            "EgoKcGFnZV90b2tlbhgDIAEoCRIzCgpzdGFydF90aW1lGAQgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EECEjEKCGVuZF90aW1lGAUgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EECImEKFExpc3RNZXNz",
            "YWdlc1Jlc3BvbnNlEjAKCG1lc3NhZ2VzGAEgAygLMh4uZW5mb25pY2EubWVz",
            "c2FnaW5nLnYxLk1lc3NhZ2USFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJMoME",
            "CghNZXNzYWdlcxKPAQoNQ3JlYXRlTWVzc2FnZRIrLmVuZm9uaWNhLm1lc3Nh",
            "Z2luZy52MS5DcmVhdGVNZXNzYWdlUmVxdWVzdBoeLmVuZm9uaWNhLm1lc3Nh",
            "Z2luZy52MS5NZXNzYWdlIjGC0+STAisiIC92MS97cGFyZW50PXByb2plY3Rz",
            "Lyp9L21lc3NhZ2VzOgdtZXNzYWdlEocBCgpHZXRNZXNzYWdlEiguZW5mb25p",
            "Y2EubWVzc2FnaW5nLnYxLkdldE1lc3NhZ2VSZXF1ZXN0Gh4uZW5mb25pY2Eu",
            "bWVzc2FnaW5nLnYxLk1lc3NhZ2UiL4LT5JMCIhIgL3YxL3tuYW1lPXByb2pl",
            "Y3RzLyovbWVzc2FnZXMvKn3aQQRuYW1lEpEBCgxMaXN0TWVzc2FnZXMSKi5l",
            "bmZvbmljYS5tZXNzYWdpbmcudjEuTGlzdE1lc3NhZ2VzUmVxdWVzdBorLmVu",
            "Zm9uaWNhLm1lc3NhZ2luZy52MS5MaXN0TWVzc2FnZXNSZXNwb25zZSIogtPk",
            "kwIiEiAvdjEve3BhcmVudD1wcm9qZWN0cy8qfS9tZXNzYWdlcxpHykEabWVz",
            "c2FnaW5nLmFwaS5lbmZvbmljYS5jb23SQSdodHRwczovL2FwaS5lbmZvbmlj",
            "YS5jb20vYXV0aC9tZXNzYWdpbmdCGKoCFUVuZm9uaWNhLk1lc3NhZ2luZy5W",
            "MWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Messaging.V1.Message), global::Enfonica.Messaging.V1.Message.Parser, new[]{ "Name", "To", "From", "Body", "StatusUpdateUrl", "ReplyUrl", "ValidityPeriodSeconds", "SmartEncoding", "Labels", "Classification", "UnsubscribeContentBehavior", "Direction", "ErrorCode", "ErrorMessage", "SegmentCount", "Price", "Status", "CreateIdentity", "CreateTime", "SendTime", "DeliverTime", "Encoding" }, null, new[]{ typeof(global::Enfonica.Messaging.V1.Message.Types.Status), typeof(global::Enfonica.Messaging.V1.Message.Types.Direction), typeof(global::Enfonica.Messaging.V1.Message.Types.MessageClassification), typeof(global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior), typeof(global::Enfonica.Messaging.V1.Message.Types.MessageEncoding) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Messaging.V1.CreateMessageRequest), global::Enfonica.Messaging.V1.CreateMessageRequest.Parser, new[]{ "Parent", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Messaging.V1.GetMessageRequest), global::Enfonica.Messaging.V1.GetMessageRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Messaging.V1.ListMessagesRequest), global::Enfonica.Messaging.V1.ListMessagesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Messaging.V1.ListMessagesResponse), global::Enfonica.Messaging.V1.ListMessagesResponse.Parser, new[]{ "Messages", "NextPageToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The Message resource. This represents a message, such as an SMS.
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Messaging.V1.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      name_ = other.name_;
      to_ = other.to_;
      from_ = other.from_;
      body_ = other.body_;
      statusUpdateUrl_ = other.statusUpdateUrl_;
      replyUrl_ = other.replyUrl_;
      validityPeriodSeconds_ = other.validityPeriodSeconds_;
      smartEncoding_ = other.smartEncoding_;
      labels_ = other.labels_.Clone();
      classification_ = other.classification_;
      unsubscribeContentBehavior_ = other.unsubscribeContentBehavior_;
      direction_ = other.direction_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      segmentCount_ = other.segmentCount_;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      status_ = other.status_;
      createIdentity_ = other.createIdentity_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      sendTime_ = other.sendTime_ != null ? other.sendTime_.Clone() : null;
      deliverTime_ = other.deliverTime_ != null ? other.deliverTime_.Clone() : null;
      encoding_ = other.encoding_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the message. It must match the pattern `projects/*/messages/*`
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    /// <summary>
    /// The recipient phone number in +E164.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 3;
    private string from_ = "";
    /// <summary>
    /// The phone number in +E164 or alphanumeric sender ID that initiated the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 4;
    private string body_ = "";
    /// <summary>
    /// The text of the message. Maximum of 1530 characters for messages encoding using GSM
    /// 7-bit encoding and 670 characters for messages encoding using UCS2 encoding. If a
    /// longer body is specified, it will be truncated to the maximum length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_update_url" field.</summary>
    public const int StatusUpdateUrlFieldNumber = 5;
    private string statusUpdateUrl_ = "";
    /// <summary>
    /// The URL where status updates should be sent.
    /// TODO: define better.
    /// Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusUpdateUrl {
      get { return statusUpdateUrl_; }
      set {
        statusUpdateUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reply_url" field.</summary>
    public const int ReplyUrlFieldNumber = 6;
    private string replyUrl_ = "";
    /// <summary>
    /// The URL where replies should be sent. This overrides any message handler URLs defined
    /// against the phone number receiving the reply.
    /// TODO: define better.
    /// Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplyUrl {
      get { return replyUrl_; }
      set {
        replyUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "validity_period_seconds" field.</summary>
    public const int ValidityPeriodSecondsFieldNumber = 7;
    private int validityPeriodSeconds_;
    /// <summary>
    /// How long the message can stay in Enfonica's outgoing message queue, in seconds. Once the
    /// message has been accepted by carriers, we cannot guarantee the message will not
    /// be queued after this period.
    /// Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ValidityPeriodSeconds {
      get { return validityPeriodSeconds_; }
      set {
        validityPeriodSeconds_ = value;
      }
    }

    /// <summary>Field number for the "smart_encoding" field.</summary>
    public const int SmartEncodingFieldNumber = 8;
    private bool smartEncoding_;
    /// <summary>
    /// Whether to automatically reply certain Unicode characters with similar GSM-7
    /// characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SmartEncoding {
      get { return smartEncoding_; }
      set {
        smartEncoding_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 162);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// You can store any arbitrary data against labels. The maximum key size is 100. The maximum
    /// value size is 1000. The maximum number of keys is 50.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 21;
    private global::Enfonica.Messaging.V1.Message.Types.MessageClassification classification_ = global::Enfonica.Messaging.V1.Message.Types.MessageClassification.Unspecified;
    /// <summary>
    /// The type of message that this is, such as transactional or marketing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Messaging.V1.Message.Types.MessageClassification Classification {
      get { return classification_; }
      set {
        classification_ = value;
      }
    }

    /// <summary>Field number for the "unsubscribe_content_behavior" field.</summary>
    public const int UnsubscribeContentBehaviorFieldNumber = 22;
    private global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior unsubscribeContentBehavior_ = global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior.UnsubscribeContentUnknown;
    /// <summary>
    /// Whether the `body` should be modified to include content indicatig how to unsubscribe.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior UnsubscribeContentBehavior {
      get { return unsubscribeContentBehavior_; }
      set {
        unsubscribeContentBehavior_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 10;
    private global::Enfonica.Messaging.V1.Message.Types.Direction direction_ = global::Enfonica.Messaging.V1.Message.Types.Direction.Unknown;
    /// <summary>
    /// The direction of the message. Can be `outgoing` for messages that are sent or `incoming`
    /// for messages that are received.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Messaging.V1.Message.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 11;
    private string errorCode_ = "";
    /// <summary>
    /// If the outgoing message failed to be delivered, the reason why.
    /// todo: should this be an enum?
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 12;
    private string errorMessage_ = "";
    /// <summary>
    /// The human readable message associated with the error.
    /// todo: do we need this if error code is an enum?
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segment_count" field.</summary>
    public const int SegmentCountFieldNumber = 13;
    private int segmentCount_;
    /// <summary>
    /// The number of segments that make up the body.
    /// todo: explain this.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SegmentCount {
      get { return segmentCount_; }
      set {
        segmentCount_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 14;
    private global::Google.Type.Money price_;
    /// <summary>
    /// The price of this message. This may not be populated until a certain stage in the message
    /// lifecycle.  todo: is this right? how does/will this work?
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 15;
    private global::Enfonica.Messaging.V1.Message.Types.Status status_ = global::Enfonica.Messaging.V1.Message.Types.Status.Unknown;
    /// <summary>
    /// The current status of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Messaging.V1.Message.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "create_identity" field.</summary>
    public const int CreateIdentityFieldNumber = 16;
    private string createIdentity_ = "";
    /// <summary>
    /// The identity that created the message.  This may be your user or service account,
    /// or identities used internally by Enfonica products. todo: is this right? should we do this?
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateIdentity {
      get { return createIdentity_; }
      set {
        createIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The creation time of the message.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "send_time" field.</summary>
    public const int SendTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sendTime_;
    /// <summary>
    /// The time the message was sent. Only set for outgoing message.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "deliver_time" field.</summary>
    public const int DeliverTimeFieldNumber = 19;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deliverTime_;
    /// <summary>
    /// The time when delivery was confirmed for the message. Only set for outgoing message.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeliverTime {
      get { return deliverTime_; }
      set {
        deliverTime_ = value;
      }
    }

    /// <summary>Field number for the "encoding" field.</summary>
    public const int EncodingFieldNumber = 23;
    private global::Enfonica.Messaging.V1.Message.Types.MessageEncoding encoding_ = global::Enfonica.Messaging.V1.Message.Types.MessageEncoding.Unknown;
    /// <summary>
    /// The encoding used for the body.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Messaging.V1.Message.Types.MessageEncoding Encoding {
      get { return encoding_; }
      set {
        encoding_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (To != other.To) return false;
      if (From != other.From) return false;
      if (Body != other.Body) return false;
      if (StatusUpdateUrl != other.StatusUpdateUrl) return false;
      if (ReplyUrl != other.ReplyUrl) return false;
      if (ValidityPeriodSeconds != other.ValidityPeriodSeconds) return false;
      if (SmartEncoding != other.SmartEncoding) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Classification != other.Classification) return false;
      if (UnsubscribeContentBehavior != other.UnsubscribeContentBehavior) return false;
      if (Direction != other.Direction) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (SegmentCount != other.SegmentCount) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (Status != other.Status) return false;
      if (CreateIdentity != other.CreateIdentity) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(SendTime, other.SendTime)) return false;
      if (!object.Equals(DeliverTime, other.DeliverTime)) return false;
      if (Encoding != other.Encoding) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (StatusUpdateUrl.Length != 0) hash ^= StatusUpdateUrl.GetHashCode();
      if (ReplyUrl.Length != 0) hash ^= ReplyUrl.GetHashCode();
      if (ValidityPeriodSeconds != 0) hash ^= ValidityPeriodSeconds.GetHashCode();
      if (SmartEncoding != false) hash ^= SmartEncoding.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Classification != global::Enfonica.Messaging.V1.Message.Types.MessageClassification.Unspecified) hash ^= Classification.GetHashCode();
      if (UnsubscribeContentBehavior != global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior.UnsubscribeContentUnknown) hash ^= UnsubscribeContentBehavior.GetHashCode();
      if (Direction != global::Enfonica.Messaging.V1.Message.Types.Direction.Unknown) hash ^= Direction.GetHashCode();
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (SegmentCount != 0) hash ^= SegmentCount.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (Status != global::Enfonica.Messaging.V1.Message.Types.Status.Unknown) hash ^= Status.GetHashCode();
      if (CreateIdentity.Length != 0) hash ^= CreateIdentity.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (sendTime_ != null) hash ^= SendTime.GetHashCode();
      if (deliverTime_ != null) hash ^= DeliverTime.GetHashCode();
      if (Encoding != global::Enfonica.Messaging.V1.Message.Types.MessageEncoding.Unknown) hash ^= Encoding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(From);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Body);
      }
      if (StatusUpdateUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusUpdateUrl);
      }
      if (ReplyUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReplyUrl);
      }
      if (ValidityPeriodSeconds != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ValidityPeriodSeconds);
      }
      if (SmartEncoding != false) {
        output.WriteRawTag(64);
        output.WriteBool(SmartEncoding);
      }
      if (Direction != global::Enfonica.Messaging.V1.Message.Types.Direction.Unknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Direction);
      }
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ErrorMessage);
      }
      if (SegmentCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SegmentCount);
      }
      if (price_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Price);
      }
      if (Status != global::Enfonica.Messaging.V1.Message.Types.Status.Unknown) {
        output.WriteRawTag(120);
        output.WriteEnum((int) Status);
      }
      if (CreateIdentity.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CreateIdentity);
      }
      if (createTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(CreateTime);
      }
      if (sendTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SendTime);
      }
      if (deliverTime_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DeliverTime);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Classification != global::Enfonica.Messaging.V1.Message.Types.MessageClassification.Unspecified) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) Classification);
      }
      if (UnsubscribeContentBehavior != global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior.UnsubscribeContentUnknown) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) UnsubscribeContentBehavior);
      }
      if (Encoding != global::Enfonica.Messaging.V1.Message.Types.MessageEncoding.Unknown) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) Encoding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(From);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Body);
      }
      if (StatusUpdateUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusUpdateUrl);
      }
      if (ReplyUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReplyUrl);
      }
      if (ValidityPeriodSeconds != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ValidityPeriodSeconds);
      }
      if (SmartEncoding != false) {
        output.WriteRawTag(64);
        output.WriteBool(SmartEncoding);
      }
      if (Direction != global::Enfonica.Messaging.V1.Message.Types.Direction.Unknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Direction);
      }
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ErrorMessage);
      }
      if (SegmentCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SegmentCount);
      }
      if (price_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Price);
      }
      if (Status != global::Enfonica.Messaging.V1.Message.Types.Status.Unknown) {
        output.WriteRawTag(120);
        output.WriteEnum((int) Status);
      }
      if (CreateIdentity.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CreateIdentity);
      }
      if (createTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(CreateTime);
      }
      if (sendTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SendTime);
      }
      if (deliverTime_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DeliverTime);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (Classification != global::Enfonica.Messaging.V1.Message.Types.MessageClassification.Unspecified) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) Classification);
      }
      if (UnsubscribeContentBehavior != global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior.UnsubscribeContentUnknown) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) UnsubscribeContentBehavior);
      }
      if (Encoding != global::Enfonica.Messaging.V1.Message.Types.MessageEncoding.Unknown) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) Encoding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (StatusUpdateUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusUpdateUrl);
      }
      if (ReplyUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyUrl);
      }
      if (ValidityPeriodSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValidityPeriodSeconds);
      }
      if (SmartEncoding != false) {
        size += 1 + 1;
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Classification != global::Enfonica.Messaging.V1.Message.Types.MessageClassification.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Classification);
      }
      if (UnsubscribeContentBehavior != global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior.UnsubscribeContentUnknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UnsubscribeContentBehavior);
      }
      if (Direction != global::Enfonica.Messaging.V1.Message.Types.Direction.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (SegmentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SegmentCount);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (Status != global::Enfonica.Messaging.V1.Message.Types.Status.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CreateIdentity.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreateIdentity);
      }
      if (createTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (sendTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SendTime);
      }
      if (deliverTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeliverTime);
      }
      if (Encoding != global::Enfonica.Messaging.V1.Message.Types.MessageEncoding.Unknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Encoding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.StatusUpdateUrl.Length != 0) {
        StatusUpdateUrl = other.StatusUpdateUrl;
      }
      if (other.ReplyUrl.Length != 0) {
        ReplyUrl = other.ReplyUrl;
      }
      if (other.ValidityPeriodSeconds != 0) {
        ValidityPeriodSeconds = other.ValidityPeriodSeconds;
      }
      if (other.SmartEncoding != false) {
        SmartEncoding = other.SmartEncoding;
      }
      labels_.Add(other.labels_);
      if (other.Classification != global::Enfonica.Messaging.V1.Message.Types.MessageClassification.Unspecified) {
        Classification = other.Classification;
      }
      if (other.UnsubscribeContentBehavior != global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior.UnsubscribeContentUnknown) {
        UnsubscribeContentBehavior = other.UnsubscribeContentBehavior;
      }
      if (other.Direction != global::Enfonica.Messaging.V1.Message.Types.Direction.Unknown) {
        Direction = other.Direction;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.SegmentCount != 0) {
        SegmentCount = other.SegmentCount;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Google.Type.Money();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.Status != global::Enfonica.Messaging.V1.Message.Types.Status.Unknown) {
        Status = other.Status;
      }
      if (other.CreateIdentity.Length != 0) {
        CreateIdentity = other.CreateIdentity;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.sendTime_ != null) {
        if (sendTime_ == null) {
          SendTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SendTime.MergeFrom(other.SendTime);
      }
      if (other.deliverTime_ != null) {
        if (deliverTime_ == null) {
          DeliverTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeliverTime.MergeFrom(other.DeliverTime);
      }
      if (other.Encoding != global::Enfonica.Messaging.V1.Message.Types.MessageEncoding.Unknown) {
        Encoding = other.Encoding;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            From = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadString();
            break;
          }
          case 42: {
            StatusUpdateUrl = input.ReadString();
            break;
          }
          case 50: {
            ReplyUrl = input.ReadString();
            break;
          }
          case 56: {
            ValidityPeriodSeconds = input.ReadInt32();
            break;
          }
          case 64: {
            SmartEncoding = input.ReadBool();
            break;
          }
          case 80: {
            Direction = (global::Enfonica.Messaging.V1.Message.Types.Direction) input.ReadEnum();
            break;
          }
          case 90: {
            ErrorCode = input.ReadString();
            break;
          }
          case 98: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 104: {
            SegmentCount = input.ReadInt32();
            break;
          }
          case 114: {
            if (price_ == null) {
              Price = new global::Google.Type.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 120: {
            Status = (global::Enfonica.Messaging.V1.Message.Types.Status) input.ReadEnum();
            break;
          }
          case 130: {
            CreateIdentity = input.ReadString();
            break;
          }
          case 138: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 146: {
            if (sendTime_ == null) {
              SendTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SendTime);
            break;
          }
          case 154: {
            if (deliverTime_ == null) {
              DeliverTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeliverTime);
            break;
          }
          case 162: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 168: {
            Classification = (global::Enfonica.Messaging.V1.Message.Types.MessageClassification) input.ReadEnum();
            break;
          }
          case 176: {
            UnsubscribeContentBehavior = (global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior) input.ReadEnum();
            break;
          }
          case 184: {
            Encoding = (global::Enfonica.Messaging.V1.Message.Types.MessageEncoding) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            From = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadString();
            break;
          }
          case 42: {
            StatusUpdateUrl = input.ReadString();
            break;
          }
          case 50: {
            ReplyUrl = input.ReadString();
            break;
          }
          case 56: {
            ValidityPeriodSeconds = input.ReadInt32();
            break;
          }
          case 64: {
            SmartEncoding = input.ReadBool();
            break;
          }
          case 80: {
            Direction = (global::Enfonica.Messaging.V1.Message.Types.Direction) input.ReadEnum();
            break;
          }
          case 90: {
            ErrorCode = input.ReadString();
            break;
          }
          case 98: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 104: {
            SegmentCount = input.ReadInt32();
            break;
          }
          case 114: {
            if (price_ == null) {
              Price = new global::Google.Type.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 120: {
            Status = (global::Enfonica.Messaging.V1.Message.Types.Status) input.ReadEnum();
            break;
          }
          case 130: {
            CreateIdentity = input.ReadString();
            break;
          }
          case 138: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 146: {
            if (sendTime_ == null) {
              SendTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SendTime);
            break;
          }
          case 154: {
            if (deliverTime_ == null) {
              DeliverTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeliverTime);
            break;
          }
          case 162: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 168: {
            Classification = (global::Enfonica.Messaging.V1.Message.Types.MessageClassification) input.ReadEnum();
            break;
          }
          case 176: {
            UnsubscribeContentBehavior = (global::Enfonica.Messaging.V1.Message.Types.UnsubscribeContentBehavior) input.ReadEnum();
            break;
          }
          case 184: {
            Encoding = (global::Enfonica.Messaging.V1.Message.Types.MessageEncoding) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Message message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The status of a message.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Unspecified status.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The message has been queued for sending.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 1,
        /// <summary>
        /// The message is currently being dispatched to an upstream carrier.
        /// </summary>
        [pbr::OriginalName("SENDING")] Sending = 2,
        /// <summary>
        /// The upstream carrier has accepted the message.
        /// </summary>
        [pbr::OriginalName("SENT")] Sent = 3,
        /// <summary>
        /// The message failed to be sent within the Enfonica network.
        /// For upstream failures, the status will be `UNDELIVERED`.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
        /// <summary>
        /// The upstream has confirmed message delivery, where available, to the
        /// destination handset.
        /// </summary>
        [pbr::OriginalName("DELIVERED")] Delivered = 5,
        /// <summary>
        /// The upstream returned a delivery receipt indicating the message was not
        /// delivered.
        /// </summary>
        [pbr::OriginalName("UNDELIVERED")] Undelivered = 6,
        /// <summary>
        /// The message is an incoming message that has been received.
        /// </summary>
        [pbr::OriginalName("RECEIVED")] Received = 7,
      }

      /// <summary>
      /// The direction of a message.
      /// </summary>
      public enum Direction {
        /// <summary>
        /// Unspecified direction.
        /// </summary>
        [pbr::OriginalName("DIRECTION_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// An outgoing message.
        /// </summary>
        [pbr::OriginalName("OUTGOING")] Outgoing = 1,
        /// <summary>
        /// An incoming message
        /// </summary>
        [pbr::OriginalName("INCOMING")] Incoming = 2,
      }

      /// <summary>
      /// The type of message that this is.
      /// </summary>
      public enum MessageClassification {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The message is not classified. This message will be checked against unsubscribers
        /// before being sent.
        /// </summary>
        [pbr::OriginalName("UNCLASSIFIED")] Unclassified = 1,
        /// <summary>
        /// A transactional message. This message will not be checked against unsubscribers
        /// before being sent.
        /// </summary>
        [pbr::OriginalName("TRANSACTIONAL")] Transactional = 2,
        /// <summary>
        /// A marketing message. This message will be checked against unsubscribers
        /// before being sent.
        /// </summary>
        [pbr::OriginalName("MARKETING")] Marketing = 3,
      }

      /// <summary>
      /// Behaviour with regards to unsubscribe content within the message.
      /// </summary>
      public enum UnsubscribeContentBehavior {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("UNSUBSCRIBE_CONTENT_UNKNOWN")] UnsubscribeContentUnknown = 0,
        /// <summary>
        /// Do not insert any unsubscribe content within the message.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 1,
        /// <summary>
        /// Append a short URL to the end of the message body which allows the user
        /// to unsubscribe. This will only append the URL, and optionally a whitespace
        /// character before the URL.
        ///
        /// Example `body` to use with this paramater:
        ///
        /// ```
        /// "This is a marketing message. To unsubscribe:"
        /// ```
        /// </summary>
        [pbr::OriginalName("APPEND_URL")] AppendUrl = 2,
      }

      /// <summary>
      /// The encoding of a message body.
      /// </summary>
      public enum MessageEncoding {
        /// <summary>
        /// Unknown message encoding.
        /// </summary>
        [pbr::OriginalName("MESSAGE_ENCODING_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// GSM 7-bit encoding.
        /// </summary>
        [pbr::OriginalName("GSM7")] Gsm7 = 1,
        /// <summary>
        /// UCS-2 encoding.
        /// </summary>
        [pbr::OriginalName("UCS2")] Ucs2 = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Request to create a new message.
  /// </summary>
  public sealed partial class CreateMessageRequest : pb::IMessage<CreateMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateMessageRequest> _parser = new pb::MessageParser<CreateMessageRequest>(() => new CreateMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Messaging.V1.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageRequest(CreateMessageRequest other) : this() {
      parent_ = other.parent_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageRequest Clone() {
      return new CreateMessageRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The resource name of the parent project to create the message under.
    /// Must be of the form `projects/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::Enfonica.Messaging.V1.Message message_;
    /// <summary>
    /// The message resource to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Messaging.V1.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::Enfonica.Messaging.V1.Message();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::Enfonica.Messaging.V1.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::Enfonica.Messaging.V1.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The GetMessage request message.
  /// </summary>
  public sealed partial class GetMessageRequest : pb::IMessage<GetMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMessageRequest> _parser = new pb::MessageParser<GetMessageRequest>(() => new GetMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Messaging.V1.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageRequest(GetMessageRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMessageRequest Clone() {
      return new GetMessageRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Message to retrieve.
    /// Must be of the form `projects/*/messages/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListMessages request message.
  /// </summary>
  public sealed partial class ListMessagesRequest : pb::IMessage<ListMessagesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListMessagesRequest> _parser = new pb::MessageParser<ListMessagesRequest>(() => new ListMessagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Messaging.V1.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListMessagesRequest(ListMessagesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListMessagesRequest Clone() {
      return new ListMessagesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The resource name of the parent of which to list messages.
    /// Must be of the form `projects/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of Messages to return in the response.
    /// Optional, with a default value of 10 and maximum value of 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListMessages`
    /// that indicates where this listing should continue from.
    /// Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The timestamp (inclusive) from which to retrieve messages. The
    /// create_time of the Message is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The timestamp (exclusive) until which to retrieve messages. The
    /// create_time of the Message is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListMessages response message.
  /// </summary>
  public sealed partial class ListMessagesResponse : pb::IMessage<ListMessagesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListMessagesResponse> _parser = new pb::MessageParser<ListMessagesResponse>(() => new ListMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Messaging.V1.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListMessagesResponse(ListMessagesResponse other) : this() {
      messages_ = other.messages_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListMessagesResponse Clone() {
      return new ListMessagesResponse(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Enfonica.Messaging.V1.Message> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::Enfonica.Messaging.V1.Message.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Messaging.V1.Message> messages_ = new pbc::RepeatedField<global::Enfonica.Messaging.V1.Message>();
    /// <summary>
    /// A possibly paginated list of Messages that are direct descendants of
    /// the specified parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Messaging.V1.Message> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListMessages`
    /// that indicates from where listing should continue.
    /// Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      messages_.WriteTo(output, _repeated_messages_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      messages_.WriteTo(ref output, _repeated_messages_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListMessagesResponse other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            messages_.AddEntriesFrom(ref input, _repeated_messages_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
