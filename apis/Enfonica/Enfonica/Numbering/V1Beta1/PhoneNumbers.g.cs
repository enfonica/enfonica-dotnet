// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enfonica/numbering/v1beta1/phone_numbers.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Enfonica.Numbering.V1Beta1 {

  /// <summary>Holder for reflection information generated from enfonica/numbering/v1beta1/phone_numbers.proto</summary>
  public static partial class PhoneNumbersReflection {

    #region Descriptor
    /// <summary>File descriptor for enfonica/numbering/v1beta1/phone_numbers.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PhoneNumbersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5lbmZvbmljYS9udW1iZXJpbmcvdjFiZXRhMS9waG9uZV9udW1iZXJzLnBy",
            "b3RvEhplbmZvbmljYS5udW1iZXJpbmcudjFiZXRhMRofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90bxogZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21h",
            "c2sucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aF2dvb2ds",
            "ZS9hcGkvY2xpZW50LnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9y",
            "LnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvIpsECgtQaG9uZU51",
            "bWJlchIMCgRuYW1lGAEgASgJEhQKDHBob25lX251bWJlchgCIAEoCRJTCgxj",
            "YXBhYmlsaXRpZXMYAyADKA4yPS5lbmZvbmljYS5udW1iZXJpbmcudjFiZXRh",
            "MS5QaG9uZU51bWJlci5QaG9uZU51bWJlckNhcGFiaWxpdHkSCwoDc2t1GAQg",
            "ASgJEkwKC251bWJlcl90eXBlGAogASgOMjcuZW5mb25pY2EubnVtYmVyaW5n",
            "LnYxYmV0YTEuUGhvbmVOdW1iZXIuUGhvbmVOdW1iZXJUeXBlEhQKDGNvdW50",
            "cnlfY29kZRgLIAEoCSJdChVQaG9uZU51bWJlckNhcGFiaWxpdHkSJwojUEhP",
            "TkVfTlVNQkVSX0NBUEFCSUxJVFlfVU5TUEVDSUZJRUQQABIHCgNTTVMQARIH",
            "CgNNTVMQAhIJCgVWT0lDRRAEInkKD1Bob25lTnVtYmVyVHlwZRIhCh1QSE9O",
            "RV9OVU1CRVJfVFlQRV9VTlNQRUNJRklFRBAAEgkKBUxPQ0FMEAESDAoITkFU",
            "SU9OQUwQAhIKCgZNT0JJTEUQAxINCglUT0xMX0ZSRUUQBBIPCgtTSEFSRURf",
            "UkFURRAFOkjqQUUKJm51bWJlcmluZy5hcGkuZW5mb25pY2EuY29tL1Bob25l",
            "TnVtYmVyEhtwaG9uZU51bWJlcnMve3Bob25lX251bWJlcn0i/wEKGVNlYXJj",
            "aFBob25lTnVtYmVyc1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgFEhIKCnBh",
            "Z2VfdG9rZW4YAiABKAkSTAoLbnVtYmVyX3R5cGUYBCABKA4yNy5lbmZvbmlj",
            "YS5udW1iZXJpbmcudjFiZXRhMS5QaG9uZU51bWJlci5QaG9uZU51bWJlclR5",
            "cGUSGQoMY291bnRyeV9jb2RlGAUgASgJQgPgQQISDgoGcHJlZml4GAYgASgJ",
            "EhYKDnN1cHBvcnRzX3ZvaWNlGAcgASgIEhQKDHN1cHBvcnRzX3NtcxgIIAEo",
            "CBIUCgxzdXBwb3J0c19tbXMYCSABKAgidQoaU2VhcmNoUGhvbmVOdW1iZXJz",
            "UmVzcG9uc2USPgoNcGhvbmVfbnVtYmVycxgBIAMoCzInLmVuZm9uaWNhLm51",
            "bWJlcmluZy52MWJldGExLlBob25lTnVtYmVyEhcKD25leHRfcGFnZV90b2tl",
            "bhgCIAEoCTKDAgoMUGhvbmVOdW1iZXJzEqkBChJTZWFyY2hQaG9uZU51bWJl",
            "cnMSNS5lbmZvbmljYS5udW1iZXJpbmcudjFiZXRhMS5TZWFyY2hQaG9uZU51",
            "bWJlcnNSZXF1ZXN0GjYuZW5mb25pY2EubnVtYmVyaW5nLnYxYmV0YTEuU2Vh",
            "cmNoUGhvbmVOdW1iZXJzUmVzcG9uc2UiJILT5JMCHhIcL3YxYmV0YTEvcGhv",
            "bmVOdW1iZXJzOnNlYXJjaBpHykEabnVtYmVyaW5nLmFwaS5lbmZvbmljYS5j",
            "b23SQSdodHRwczovL2FwaS5lbmZvbmljYS5jb20vYXV0aC9udW1iZXJpbmdC",
            "mgEKHmNvbS5lbmZvbmljYS5udW1iZXJpbmcudjFiZXRhMUIRUGhvbmVOdW1i",
            "ZXJzUHJvdG9QAVo7Z2l0aHViLmNvbS9lbmZvbmljYS9lbmZvbmljYS1nby9u",
            "dW1iZXJpbmcvdjFiZXRhMTtudW1iZXJpbmf4AQGiAgVFTkZPTqoCGkVuZm9u",
            "aWNhLk51bWJlcmluZy5WMUJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Numbering.V1Beta1.PhoneNumber), global::Enfonica.Numbering.V1Beta1.PhoneNumber.Parser, new[]{ "Name", "PhoneNumber_", "Capabilities", "Sku", "NumberType", "CountryCode" }, null, new[]{ typeof(global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberCapability), typeof(global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Numbering.V1Beta1.SearchPhoneNumbersRequest), global::Enfonica.Numbering.V1Beta1.SearchPhoneNumbersRequest.Parser, new[]{ "PageSize", "PageToken", "NumberType", "CountryCode", "Prefix", "SupportsVoice", "SupportsSms", "SupportsMms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Numbering.V1Beta1.SearchPhoneNumbersResponse), global::Enfonica.Numbering.V1Beta1.SearchPhoneNumbersResponse.Parser, new[]{ "PhoneNumbers", "NextPageToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The PhoneNumber resource.
  /// </summary>
  public sealed partial class PhoneNumber : pb::IMessage<PhoneNumber>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PhoneNumber> _parser = new pb::MessageParser<PhoneNumber>(() => new PhoneNumber());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhoneNumber> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Numbering.V1Beta1.PhoneNumbersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhoneNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhoneNumber(PhoneNumber other) : this() {
      name_ = other.name_;
      phoneNumber_ = other.phoneNumber_;
      capabilities_ = other.capabilities_.Clone();
      sku_ = other.sku_;
      numberType_ = other.numberType_;
      countryCode_ = other.countryCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhoneNumber Clone() {
      return new PhoneNumber(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the phone number. It must match the pattern
    /// `phoneNumbers/*`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumber_FieldNumber = 2;
    private string phoneNumber_ = "";
    /// <summary>
    /// The phone number, in +E164 format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber_ {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "capabilities" field.</summary>
    public const int CapabilitiesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberCapability> _repeated_capabilities_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberCapability) x);
    private readonly pbc::RepeatedField<global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberCapability> capabilities_ = new pbc::RepeatedField<global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberCapability>();
    /// <summary>
    /// The capabilities of the phone number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberCapability> Capabilities {
      get { return capabilities_; }
    }

    /// <summary>Field number for the "sku" field.</summary>
    public const int SkuFieldNumber = 4;
    private string sku_ = "";
    /// <summary>
    /// The SKU that will be used to bill the phone number.
    /// In the form `services/*/skus/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sku {
      get { return sku_; }
      set {
        sku_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number_type" field.</summary>
    public const int NumberTypeFieldNumber = 10;
    private global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType numberType_ = global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified;
    /// <summary>
    /// The type of phone number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType NumberType {
      get { return numberType_; }
      set {
        numberType_ = value;
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 11;
    private string countryCode_ = "";
    /// <summary>
    /// The alpha-2 country code that identifies the country associated with
    /// the phone number.
    /// (-- api-linter: core::0143::standardized-codes=disabled
    ///     aip.dev/not-precedent: Country code is used in this beta. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhoneNumber);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhoneNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PhoneNumber_ != other.PhoneNumber_) return false;
      if(!capabilities_.Equals(other.capabilities_)) return false;
      if (Sku != other.Sku) return false;
      if (NumberType != other.NumberType) return false;
      if (CountryCode != other.CountryCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PhoneNumber_.Length != 0) hash ^= PhoneNumber_.GetHashCode();
      hash ^= capabilities_.GetHashCode();
      if (Sku.Length != 0) hash ^= Sku.GetHashCode();
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) hash ^= NumberType.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PhoneNumber_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PhoneNumber_);
      }
      capabilities_.WriteTo(output, _repeated_capabilities_codec);
      if (Sku.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sku);
      }
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) NumberType);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CountryCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PhoneNumber_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PhoneNumber_);
      }
      capabilities_.WriteTo(ref output, _repeated_capabilities_codec);
      if (Sku.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sku);
      }
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) NumberType);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CountryCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PhoneNumber_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber_);
      }
      size += capabilities_.CalculateSize(_repeated_capabilities_codec);
      if (Sku.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sku);
      }
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NumberType);
      }
      if (CountryCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhoneNumber other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PhoneNumber_.Length != 0) {
        PhoneNumber_ = other.PhoneNumber_;
      }
      capabilities_.Add(other.capabilities_);
      if (other.Sku.Length != 0) {
        Sku = other.Sku;
      }
      if (other.NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        NumberType = other.NumberType;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            PhoneNumber_ = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            capabilities_.AddEntriesFrom(input, _repeated_capabilities_codec);
            break;
          }
          case 34: {
            Sku = input.ReadString();
            break;
          }
          case 80: {
            NumberType = (global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType) input.ReadEnum();
            break;
          }
          case 90: {
            CountryCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            PhoneNumber_ = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            capabilities_.AddEntriesFrom(ref input, _repeated_capabilities_codec);
            break;
          }
          case 34: {
            Sku = input.ReadString();
            break;
          }
          case 80: {
            NumberType = (global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType) input.ReadEnum();
            break;
          }
          case 90: {
            CountryCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PhoneNumber message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A capability of a phone number.
      /// </summary>
      public enum PhoneNumberCapability {
        /// <summary>
        /// Unspecified phone number capability.
        /// </summary>
        [pbr::OriginalName("PHONE_NUMBER_CAPABILITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The phone number is capable of SMS.
        /// </summary>
        [pbr::OriginalName("SMS")] Sms = 1,
        /// <summary>
        /// The phone number is capable of MMS.
        /// </summary>
        [pbr::OriginalName("MMS")] Mms = 2,
        /// <summary>
        /// The phone number is capable of voice.
        /// </summary>
        [pbr::OriginalName("VOICE")] Voice = 4,
      }

      /// <summary>
      /// The type of phone number.
      /// </summary>
      public enum PhoneNumberType {
        /// <summary>
        /// Unspecified phone number type.
        /// </summary>
        [pbr::OriginalName("PHONE_NUMBER_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The phone number is a local phone number and corresponds to
        /// a specific geography within a country.
        /// </summary>
        [pbr::OriginalName("LOCAL")] Local = 1,
        /// <summary>
        /// The phone number is a national phone number and is independent
        /// of geography within a country.
        /// </summary>
        [pbr::OriginalName("NATIONAL")] National = 2,
        /// <summary>
        /// The phone number is a mobile-only phone number and is independent
        /// of geography within a country.
        /// </summary>
        [pbr::OriginalName("MOBILE")] Mobile = 3,
        /// <summary>
        /// The phone number is a toll-free number, where the caller can call
        /// the number typically without any cost to the caller.
        /// </summary>
        [pbr::OriginalName("TOLL_FREE")] TollFree = 4,
        /// <summary>
        /// The phone number is a shared-rate number, where both the caller
        /// and holder of the phone number both typically share in the cost
        /// of calls to the phone number.
        /// </summary>
        [pbr::OriginalName("SHARED_RATE")] SharedRate = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// The SearchPhoneNumbers request.
  /// </summary>
  public sealed partial class SearchPhoneNumbersRequest : pb::IMessage<SearchPhoneNumbersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchPhoneNumbersRequest> _parser = new pb::MessageParser<SearchPhoneNumbersRequest>(() => new SearchPhoneNumbersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchPhoneNumbersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Numbering.V1Beta1.PhoneNumbersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchPhoneNumbersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchPhoneNumbersRequest(SearchPhoneNumbersRequest other) : this() {
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      numberType_ = other.numberType_;
      countryCode_ = other.countryCode_;
      prefix_ = other.prefix_;
      supportsVoice_ = other.supportsVoice_;
      supportsSms_ = other.supportsSms_;
      supportsMms_ = other.supportsMms_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchPhoneNumbersRequest Clone() {
      return new SearchPhoneNumbersRequest(this);
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 1;
    private int pageSize_;
    /// <summary>
    /// The maximum number of PhoneNumbers to return in the response.
    /// Default value of 10 and maximum value of 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `SearchPhoneNumbers`
    /// that indicates where this listing should continue from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number_type" field.</summary>
    public const int NumberTypeFieldNumber = 4;
    private global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType numberType_ = global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified;
    /// <summary>
    /// The type of phone number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType NumberType {
      get { return numberType_; }
      set {
        numberType_ = value;
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 5;
    private string countryCode_ = "";
    /// <summary>
    /// The alpha-2 country code that identifies the country associated with
    /// the phone number.
    /// (-- api-linter: core::0143::standardized-codes=disabled
    ///     aip.dev/not-precedent: Country code is used in this beta. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 6;
    private string prefix_ = "";
    /// <summary>
    /// The prefix that the number must have after the country code. If the
    /// prefix starts with '0', it will be automatically removed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supports_voice" field.</summary>
    public const int SupportsVoiceFieldNumber = 7;
    private bool supportsVoice_;
    /// <summary>
    /// If true, the phone number must support voice.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportsVoice {
      get { return supportsVoice_; }
      set {
        supportsVoice_ = value;
      }
    }

    /// <summary>Field number for the "supports_sms" field.</summary>
    public const int SupportsSmsFieldNumber = 8;
    private bool supportsSms_;
    /// <summary>
    /// If true, the phone number must support SMS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportsSms {
      get { return supportsSms_; }
      set {
        supportsSms_ = value;
      }
    }

    /// <summary>Field number for the "supports_mms" field.</summary>
    public const int SupportsMmsFieldNumber = 9;
    private bool supportsMms_;
    /// <summary>
    /// If true, the phone number must support MMS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportsMms {
      get { return supportsMms_; }
      set {
        supportsMms_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchPhoneNumbersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchPhoneNumbersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (NumberType != other.NumberType) return false;
      if (CountryCode != other.CountryCode) return false;
      if (Prefix != other.Prefix) return false;
      if (SupportsVoice != other.SupportsVoice) return false;
      if (SupportsSms != other.SupportsSms) return false;
      if (SupportsMms != other.SupportsMms) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) hash ^= NumberType.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (SupportsVoice != false) hash ^= SupportsVoice.GetHashCode();
      if (SupportsSms != false) hash ^= SupportsSms.GetHashCode();
      if (SupportsMms != false) hash ^= SupportsMms.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) NumberType);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CountryCode);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Prefix);
      }
      if (SupportsVoice != false) {
        output.WriteRawTag(56);
        output.WriteBool(SupportsVoice);
      }
      if (SupportsSms != false) {
        output.WriteRawTag(64);
        output.WriteBool(SupportsSms);
      }
      if (SupportsMms != false) {
        output.WriteRawTag(72);
        output.WriteBool(SupportsMms);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) NumberType);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CountryCode);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Prefix);
      }
      if (SupportsVoice != false) {
        output.WriteRawTag(56);
        output.WriteBool(SupportsVoice);
      }
      if (SupportsSms != false) {
        output.WriteRawTag(64);
        output.WriteBool(SupportsSms);
      }
      if (SupportsMms != false) {
        output.WriteRawTag(72);
        output.WriteBool(SupportsMms);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NumberType);
      }
      if (CountryCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (SupportsVoice != false) {
        size += 1 + 1;
      }
      if (SupportsSms != false) {
        size += 1 + 1;
      }
      if (SupportsMms != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchPhoneNumbersRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.NumberType != global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType.Unspecified) {
        NumberType = other.NumberType;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      if (other.SupportsVoice != false) {
        SupportsVoice = other.SupportsVoice;
      }
      if (other.SupportsSms != false) {
        SupportsSms = other.SupportsSms;
      }
      if (other.SupportsMms != false) {
        SupportsMms = other.SupportsMms;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            NumberType = (global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType) input.ReadEnum();
            break;
          }
          case 42: {
            CountryCode = input.ReadString();
            break;
          }
          case 50: {
            Prefix = input.ReadString();
            break;
          }
          case 56: {
            SupportsVoice = input.ReadBool();
            break;
          }
          case 64: {
            SupportsSms = input.ReadBool();
            break;
          }
          case 72: {
            SupportsMms = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            NumberType = (global::Enfonica.Numbering.V1Beta1.PhoneNumber.Types.PhoneNumberType) input.ReadEnum();
            break;
          }
          case 42: {
            CountryCode = input.ReadString();
            break;
          }
          case 50: {
            Prefix = input.ReadString();
            break;
          }
          case 56: {
            SupportsVoice = input.ReadBool();
            break;
          }
          case 64: {
            SupportsSms = input.ReadBool();
            break;
          }
          case 72: {
            SupportsMms = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The SearchPhoneNumbers response.
  /// </summary>
  public sealed partial class SearchPhoneNumbersResponse : pb::IMessage<SearchPhoneNumbersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchPhoneNumbersResponse> _parser = new pb::MessageParser<SearchPhoneNumbersResponse>(() => new SearchPhoneNumbersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchPhoneNumbersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Numbering.V1Beta1.PhoneNumbersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchPhoneNumbersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchPhoneNumbersResponse(SearchPhoneNumbersResponse other) : this() {
      phoneNumbers_ = other.phoneNumbers_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchPhoneNumbersResponse Clone() {
      return new SearchPhoneNumbersResponse(this);
    }

    /// <summary>Field number for the "phone_numbers" field.</summary>
    public const int PhoneNumbersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Enfonica.Numbering.V1Beta1.PhoneNumber> _repeated_phoneNumbers_codec
        = pb::FieldCodec.ForMessage(10, global::Enfonica.Numbering.V1Beta1.PhoneNumber.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Numbering.V1Beta1.PhoneNumber> phoneNumbers_ = new pbc::RepeatedField<global::Enfonica.Numbering.V1Beta1.PhoneNumber>();
    /// <summary>
    /// A possibly paginated list of PhoneNumbers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Numbering.V1Beta1.PhoneNumber> PhoneNumbers {
      get { return phoneNumbers_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `SearchPhoneNumbers`
    /// that indicates from where listing should continue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchPhoneNumbersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchPhoneNumbersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!phoneNumbers_.Equals(other.phoneNumbers_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= phoneNumbers_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      phoneNumbers_.WriteTo(output, _repeated_phoneNumbers_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      phoneNumbers_.WriteTo(ref output, _repeated_phoneNumbers_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += phoneNumbers_.CalculateSize(_repeated_phoneNumbers_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchPhoneNumbersResponse other) {
      if (other == null) {
        return;
      }
      phoneNumbers_.Add(other.phoneNumbers_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            phoneNumbers_.AddEntriesFrom(input, _repeated_phoneNumbers_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            phoneNumbers_.AddEntriesFrom(ref input, _repeated_phoneNumbers_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
