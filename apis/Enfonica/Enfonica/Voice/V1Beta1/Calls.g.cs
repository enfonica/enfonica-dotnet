// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enfonica/voice/v1beta1/calls.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Enfonica.Voice.V1Beta1 {

  /// <summary>Holder for reflection information generated from enfonica/voice/v1beta1/calls.proto</summary>
  public static partial class CallsReflection {

    #region Descriptor
    /// <summary>File descriptor for enfonica/voice/v1beta1/calls.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CallsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJlbmZvbmljYS92b2ljZS92MWJldGExL2NhbGxzLnByb3RvEhZlbmZvbmlj",
            "YS52b2ljZS52MWJldGExGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aHGdvb2dsZS9h",
            "cGkvYW5ub3RhdGlvbnMucHJvdG8aF2dvb2dsZS90eXBlL21vbmV5LnByb3Rv",
            "Ghlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh9nb29nbGUvYXBpL2ZpZWxk",
            "X2JlaGF2aW9yLnByb3RvGhdnb29nbGUvYXBpL2NsaWVudC5wcm90bxoYZ29v",
            "Z2xlL3R5cGUvbGF0bG5nLnByb3RvGjJlbmZvbmljYS92b2ljZS92MWJldGEx",
            "L2NhbGxfcmVjb3JkaW5nX2NvbmZpZy5wcm90byKfDQoEQ2FsbBIMCgRuYW1l",
            "GAEgASgJEg8KAnRvGAIgASgJQgPgQQISEQoEZnJvbRgDIAEoCUID4EECEj0K",
            "DWZyb21fbG9jYXRpb24YGSABKAsyJi5lbmZvbmljYS52b2ljZS52MWJldGEx",
            "Lk51bWJlckxvY2F0aW9uEhEKCWZyb21fem9uZRgaIAEoCRISCgppc19wcml2",
            "YXRlGAQgASgIEjgKBmxhYmVscxgIIAMoCzIoLmVuZm9uaWNhLnZvaWNlLnYx",
            "YmV0YTEuQ2FsbC5MYWJlbHNFbnRyeRI+Cgl0cmFuc3BvcnQYCSABKA4yJi5l",
            "bmZvbmljYS52b2ljZS52MWJldGExLkNhbGwuVHJhbnNwb3J0QgPgQQMSPgoJ",
            "ZGlyZWN0aW9uGAogASgOMiYuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5DYWxs",
            "LkRpcmVjdGlvbkID4EEDEhcKCmVycm9yX2NvZGUYCyABKAlCA+BBAxIaCg1l",
            "cnJvcl9tZXNzYWdlGAwgASgJQgPgQQMSJgoFcHJpY2UYDSABKAsyEi5nb29n",
            "bGUudHlwZS5Nb25leUID4EEDEjYKBXN0YXRlGA4gASgOMiIuZW5mb25pY2Eu",
            "dm9pY2UudjFiZXRhMS5DYWxsLlN0YXRlQgPgQQMSNAoLY3JlYXRlX3RpbWUY",
            "ECABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMwoKc3Rh",
            "cnRfdGltZRgRIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BB",
            "AxIyCglyaW5nX3RpbWUYEiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wQgPgQQMSNAoLYW5zd2VyX3RpbWUYEyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQgPgQQMSMQoIZW5kX3RpbWUYFCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wQgPgQQMSFAoHYnJpZGdlZBgVIAEoCEID4EED",
            "Eh0KEG9yaWdpbmF0aW5nX2NhbGwYFiABKAlCA+BBAxJFCg1jcmVhdGVfbWV0",
            "aG9kGBcgASgOMikuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5DYWxsLkNyZWF0",
            "ZU1ldGhvZEID4EEDEkEKB29wdGlvbnMYGCABKAsyKy5lbmZvbmljYS52b2lj",
            "ZS52MWJldGExLkNhbGwuQXBpQ2FsbE9wdGlvbnNCA+BBAhIYCgtzaXBfY2Fs",
            "bF9pZBgbIAEoCUID4EEDEjcKD2Fuc3dlcl9kdXJhdGlvbhgcIAEoCzIZLmdv",
            "b2dsZS5wcm90b2J1Zi5EdXJhdGlvbkID4EEDGp4BCg5BcGlDYWxsT3B0aW9u",
            "cxIZCgxoYW5kbGVyX3VyaXMYASADKAlCA+BBAhIYChBzdGF0ZV91cGRhdGVf",
            "dXJpGAIgASgJEhcKD3RpbWVvdXRfc2Vjb25kcxgDIAEoBRI+CglyZWNvcmRp",
            "bmcYBCABKAsyKy5lbmZvbmljYS52b2ljZS52MWJldGExLkNhbGxSZWNvcmRp",
            "bmdDb25maWcaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgJOgI4ASKbAQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIK",
            "CgZRVUVVRUQQARIMCghTVEFSVElORxACEgsKB1JJTkdJTkcQAxIPCgtJTl9Q",
            "Uk9HUkVTUxAEEg0KCUNPTVBMRVRFRBAFEgoKBkZBSUxFRBAGEhAKDE5PVF9B",
            "TlNXRVJFRBAHEggKBEJVU1kQCBIMCghSRUpFQ1RFRBAJIkIKCURpcmVjdGlv",
            "bhIZChVESVJFQ1RJT05fVU5TUEVDSUZJRUQQABIMCghPVVRHT0lORxABEgwK",
            "CElOQ09NSU5HEAIiRQoJVHJhbnNwb3J0EhkKFVRSQU5TUE9SVF9VTlNQRUNJ",
            "RklFRBAAEggKBFBTVE4QARIKCgZDTElFTlQQAhIHCgNTSVAQAyJaCgxDcmVh",
            "dGVNZXRob2QSHQoZQ1JFQVRFX01FVEhPRF9VTlNQRUNJRklFRBAAEhEKDUlO",
            "Q09NSU5HX0NBTEwQARIPCgtQQVJFTlRfQ0FMTBACEgcKA0FQSRADOkHqQT4K",
            "G3ZvaWNlLmFwaS5lbmZvbmljYS5jb20vQ2FsbBIfcHJvamVjdHMve3Byb2pl",
            "Y3R9L2NhbGxzL3tjYWxsfSJ+Cg5OdW1iZXJMb2NhdGlvbhITCgtyZWdpb25f",
            "Y29kZRgBIAEoCRIbChNhZG1pbmlzdHJhdGl2ZV9hcmVhGAIgASgJEhAKCGxv",
            "Y2FsaXR5GAMgASgJEigKC2Nvb3JkaW5hdGVzGAQgASgLMhMuZ29vZ2xlLnR5",
            "cGUuTGF0TG5nInkKEUNyZWF0ZUNhbGxSZXF1ZXN0EjMKBnBhcmVudBgBIAEo",
            "CUIj4EEC+kEdEht2b2ljZS5hcGkuZW5mb25pY2EuY29tL0NhbGwSLwoEY2Fs",
            "bBgCIAEoCzIcLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEuQ2FsbEID4EECIkMK",
            "DkdldENhbGxSZXF1ZXN0EjEKBG5hbWUYASABKAlCI+BBAvpBHQobdm9pY2Uu",
            "YXBpLmVuZm9uaWNhLmNvbS9DYWxsIn4KEExpc3RDYWxsc1JlcXVlc3QSMwoG",
            "cGFyZW50GAEgASgJQiPgQQL6QR0SG3ZvaWNlLmFwaS5lbmZvbmljYS5jb20v",
            "Q2FsbBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRIO",
            "CgZmaWx0ZXIYBCABKAkiWQoRTGlzdENhbGxzUmVzcG9uc2USKwoFY2FsbHMY",
            "ASADKAsyHC5lbmZvbmljYS52b2ljZS52MWJldGExLkNhbGwSFwoPbmV4dF9w",
            "YWdlX3Rva2VuGAIgASgJMv0DCgVDYWxscxKVAQoKQ3JlYXRlQ2FsbBIpLmVu",
            "Zm9uaWNhLnZvaWNlLnYxYmV0YTEuQ3JlYXRlQ2FsbFJlcXVlc3QaHC5lbmZv",
            "bmljYS52b2ljZS52MWJldGExLkNhbGwiPoLT5JMCKiIiL3YxYmV0YTEve3Bh",
            "cmVudD1wcm9qZWN0cy8qfS9jYWxsczoEY2FsbNpBC3BhcmVudCxjYWxsEoIB",
            "CgdHZXRDYWxsEiYuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5HZXRDYWxsUmVx",
            "dWVzdBocLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEuQ2FsbCIxgtPkkwIkEiIv",
            "djFiZXRhMS97bmFtZT1wcm9qZWN0cy8qL2NhbGxzLyp92kEEbmFtZRKVAQoJ",
            "TGlzdENhbGxzEiguZW5mb25pY2Eudm9pY2UudjFiZXRhMS5MaXN0Q2FsbHNS",
            "ZXF1ZXN0GikuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5MaXN0Q2FsbHNSZXNw",
            "b25zZSIzgtPkkwIkEiIvdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyp9L2Nh",
            "bGxz2kEGcGFyZW50Gj/KQRZ2b2ljZS5hcGkuZW5mb25pY2EuY29t0kEjaHR0",
            "cHM6Ly9hcGkuZW5mb25pY2EuY29tL2F1dGgvdm9pY2VCgwEKGmNvbS5lbmZv",
            "bmljYS52b2ljZS52MWJldGExQgpDYWxsc1Byb3RvUAFaM2dpdGh1Yi5jb20v",
            "ZW5mb25pY2EvZW5mb25pY2EtZ28vdm9pY2UvdjFiZXRhMTt2b2ljZfgBAaIC",
            "BUVORk9OqgIWRW5mb25pY2EuVm9pY2UuVjFCZXRhMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, global::Enfonica.Voice.V1Beta1.CallRecordingConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.Call), global::Enfonica.Voice.V1Beta1.Call.Parser, new[]{ "Name", "To", "From", "FromLocation", "FromZone", "IsPrivate", "Labels", "Transport", "Direction", "ErrorCode", "ErrorMessage", "Price", "State", "CreateTime", "StartTime", "RingTime", "AnswerTime", "EndTime", "Bridged", "OriginatingCall", "CreateMethod", "Options", "SipCallId", "AnswerDuration" }, null, new[]{ typeof(global::Enfonica.Voice.V1Beta1.Call.Types.State), typeof(global::Enfonica.Voice.V1Beta1.Call.Types.Direction), typeof(global::Enfonica.Voice.V1Beta1.Call.Types.Transport), typeof(global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions), global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions.Parser, new[]{ "HandlerUris", "StateUpdateUri", "TimeoutSeconds", "Recording" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.NumberLocation), global::Enfonica.Voice.V1Beta1.NumberLocation.Parser, new[]{ "RegionCode", "AdministrativeArea", "Locality", "Coordinates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.CreateCallRequest), global::Enfonica.Voice.V1Beta1.CreateCallRequest.Parser, new[]{ "Parent", "Call" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.GetCallRequest), global::Enfonica.Voice.V1Beta1.GetCallRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.ListCallsRequest), global::Enfonica.Voice.V1Beta1.ListCallsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.ListCallsResponse), global::Enfonica.Voice.V1Beta1.ListCallsResponse.Parser, new[]{ "Calls", "NextPageToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The Call resource. This represents a call, such as an SMS.
  /// </summary>
  public sealed partial class Call : pb::IMessage<Call>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Call> _parser = new pb::MessageParser<Call>(() => new Call());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Call> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.CallsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call(Call other) : this() {
      name_ = other.name_;
      to_ = other.to_;
      from_ = other.from_;
      fromLocation_ = other.fromLocation_ != null ? other.fromLocation_.Clone() : null;
      fromZone_ = other.fromZone_;
      isPrivate_ = other.isPrivate_;
      labels_ = other.labels_.Clone();
      transport_ = other.transport_;
      direction_ = other.direction_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      state_ = other.state_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      ringTime_ = other.ringTime_ != null ? other.ringTime_.Clone() : null;
      answerTime_ = other.answerTime_ != null ? other.answerTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      bridged_ = other.bridged_;
      originatingCall_ = other.originatingCall_;
      createMethod_ = other.createMethod_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      sipCallId_ = other.sipCallId_;
      answerDuration_ = other.answerDuration_ != null ? other.answerDuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call Clone() {
      return new Call(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the call. It is of the form `projects/*/calls/*`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    /// <summary>
    /// The recipient of the call.
    ///
    /// For PSTN calls, this is the phone number in +E164 format.
    ///
    /// For calls to a SIP domain, this is the URI in the To header, in the format
    /// `sip:user-or-number@domain`.
    ///
    /// When placing outgoing API calls, only PSTN is supported.
    /// (-- api-linter: core::0140::prepositions=disabled
    ///     aip.dev/not-precedent: Not a preposition. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 3;
    private string from_ = "";
    /// <summary>
    /// The originator of the call.
    ///
    /// For PSTN calls, this is the CLI (Caller ID) in +E164 format. When placing
    /// outgoing API calls, this is required.
    ///
    /// For calls to a SIP domain, this is the URI in the From header, in the
    /// format `sip:user-or-number@domain`.
    ///
    /// This field will not be set if the CLI originated from the PSTN and
    /// `is_private` is true.
    /// (-- api-linter: core::0140::prepositions=disabled
    ///     aip.dev/not-precedent: Not a preposition. --)
    /// (-- api-linter: core::0140::reserved-words=disabled
    ///     aip.dev/not-precedent: `from` is a core concept in Enfonica APIs. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_location" field.</summary>
    public const int FromLocationFieldNumber = 25;
    private global::Enfonica.Voice.V1Beta1.NumberLocation fromLocation_;
    /// <summary>
    /// The approximate location where the call originated from. Only set for
    /// INCOMING calls (this may be changed in the future).
    /// (-- api-linter: core::0140::prepositions=disabled
    ///     aip.dev/not-precedent: Not a preposition. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.NumberLocation FromLocation {
      get { return fromLocation_; }
      set {
        fromLocation_ = value;
      }
    }

    /// <summary>Field number for the "from_zone" field.</summary>
    public const int FromZoneFieldNumber = 26;
    private string fromZone_ = "";
    /// <summary>
    /// The zone associated with the `from` phone number, if applicable. Only
    /// applicable for PSTN. Only set for INCOMING calls (this may be changed in
    /// the future).
    /// (-- api-linter: core::0140::prepositions=disabled
    ///     aip.dev/not-precedent: Not a preposition. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromZone {
      get { return fromZone_; }
      set {
        fromZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_private" field.</summary>
    public const int IsPrivateFieldNumber = 4;
    private bool isPrivate_;
    /// <summary>
    /// Whether the Caller ID is private.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivate {
      get { return isPrivate_; }
      set {
        isPrivate_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// You can store any arbitrary data against labels. The maximum number of keys is 50.
    /// The maximum length of all keys and values combined is 10kB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "transport" field.</summary>
    public const int TransportFieldNumber = 9;
    private global::Enfonica.Voice.V1Beta1.Call.Types.Transport transport_ = global::Enfonica.Voice.V1Beta1.Call.Types.Transport.Unspecified;
    /// <summary>
    /// The transport that carried this call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Call.Types.Transport Transport {
      get { return transport_; }
      set {
        transport_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 10;
    private global::Enfonica.Voice.V1Beta1.Call.Types.Direction direction_ = global::Enfonica.Voice.V1Beta1.Call.Types.Direction.Unspecified;
    /// <summary>
    /// The direction of the call. Can be `outgoing` for calls that are sent or `incoming`
    /// for calls that are received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Call.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 11;
    private string errorCode_ = "";
    /// <summary>
    /// If the outgoing call failed to be delivered, the reason why.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 12;
    private string errorMessage_ = "";
    /// <summary>
    /// The human readable call associated with the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 13;
    private global::Google.Type.Money price_;
    /// <summary>
    /// The price of this call. This may be set at various times. Generally,
    /// it is available when the call reaches a terminal state, either immediately
    /// or shortly afterwards.
    ///
    /// This price is the price of the call itself, and does not include charges
    /// from the consumption of other paid services, such as text-to-speech and
    /// transcription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 14;
    private global::Enfonica.Voice.V1Beta1.Call.Types.State state_ = global::Enfonica.Voice.V1Beta1.Call.Types.State.Unspecified;
    /// <summary>
    /// The current state of the call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Call.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The creation time of the call.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time the call was started.
    /// For an incoming call, this is the same as `create_time`.
    /// For an outgoing call, this is the time that the call attempt commenced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "ring_time" field.</summary>
    public const int RingTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ringTime_;
    /// <summary>
    /// The time the call started ringing. Only set for outgoing call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RingTime {
      get { return ringTime_; }
      set {
        ringTime_ = value;
      }
    }

    /// <summary>Field number for the "answer_time" field.</summary>
    public const int AnswerTimeFieldNumber = 19;
    private global::Google.Protobuf.WellKnownTypes.Timestamp answerTime_;
    /// <summary>
    /// The time the call was answered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AnswerTime {
      get { return answerTime_; }
      set {
        answerTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 20;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time the call finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "bridged" field.</summary>
    public const int BridgedFieldNumber = 21;
    private bool bridged_;
    /// <summary>
    /// Was the call bridged with another call at any point?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bridged {
      get { return bridged_; }
      set {
        bridged_ = value;
      }
    }

    /// <summary>Field number for the "originating_call" field.</summary>
    public const int OriginatingCallFieldNumber = 22;
    private string originatingCall_ = "";
    /// <summary>
    /// The name of the call that originated this call, set
    /// for outgoing calls that were created during the execution of another call,
    /// of the form `projects/*/calls/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginatingCall {
      get { return originatingCall_; }
      set {
        originatingCall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_method" field.</summary>
    public const int CreateMethodFieldNumber = 23;
    private global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod createMethod_ = global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod.Unspecified;
    /// <summary>
    /// How this call started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod CreateMethod {
      get { return createMethod_; }
      set {
        createMethod_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 24;
    private global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions options_;
    /// <summary>
    /// The options to use to handle this call. This is only required when a call is created
    /// using the API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "sip_call_id" field.</summary>
    public const int SipCallIdFieldNumber = 27;
    private string sipCallId_ = "";
    /// <summary>
    /// The `Call-ID` header of the call. Only set when transport is SIP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SipCallId {
      get { return sipCallId_; }
      set {
        sipCallId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "answer_duration" field.</summary>
    public const int AnswerDurationFieldNumber = 28;
    private global::Google.Protobuf.WellKnownTypes.Duration answerDuration_;
    /// <summary>
    /// The duration for which the call was answered. If the call was not answered
    /// or it has not reached a terminal state, this field will not be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration AnswerDuration {
      get { return answerDuration_; }
      set {
        answerDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Call);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Call other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (To != other.To) return false;
      if (From != other.From) return false;
      if (!object.Equals(FromLocation, other.FromLocation)) return false;
      if (FromZone != other.FromZone) return false;
      if (IsPrivate != other.IsPrivate) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Transport != other.Transport) return false;
      if (Direction != other.Direction) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (State != other.State) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(RingTime, other.RingTime)) return false;
      if (!object.Equals(AnswerTime, other.AnswerTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Bridged != other.Bridged) return false;
      if (OriginatingCall != other.OriginatingCall) return false;
      if (CreateMethod != other.CreateMethod) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (SipCallId != other.SipCallId) return false;
      if (!object.Equals(AnswerDuration, other.AnswerDuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (fromLocation_ != null) hash ^= FromLocation.GetHashCode();
      if (FromZone.Length != 0) hash ^= FromZone.GetHashCode();
      if (IsPrivate != false) hash ^= IsPrivate.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Transport != global::Enfonica.Voice.V1Beta1.Call.Types.Transport.Unspecified) hash ^= Transport.GetHashCode();
      if (Direction != global::Enfonica.Voice.V1Beta1.Call.Types.Direction.Unspecified) hash ^= Direction.GetHashCode();
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (State != global::Enfonica.Voice.V1Beta1.Call.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (ringTime_ != null) hash ^= RingTime.GetHashCode();
      if (answerTime_ != null) hash ^= AnswerTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Bridged != false) hash ^= Bridged.GetHashCode();
      if (OriginatingCall.Length != 0) hash ^= OriginatingCall.GetHashCode();
      if (CreateMethod != global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod.Unspecified) hash ^= CreateMethod.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (SipCallId.Length != 0) hash ^= SipCallId.GetHashCode();
      if (answerDuration_ != null) hash ^= AnswerDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(From);
      }
      if (IsPrivate != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsPrivate);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Transport != global::Enfonica.Voice.V1Beta1.Call.Types.Transport.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Transport);
      }
      if (Direction != global::Enfonica.Voice.V1Beta1.Call.Types.Direction.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Direction);
      }
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ErrorMessage);
      }
      if (price_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Price);
      }
      if (State != global::Enfonica.Voice.V1Beta1.Call.Types.State.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(StartTime);
      }
      if (ringTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RingTime);
      }
      if (answerTime_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(AnswerTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(EndTime);
      }
      if (Bridged != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Bridged);
      }
      if (OriginatingCall.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(OriginatingCall);
      }
      if (CreateMethod != global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod.Unspecified) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) CreateMethod);
      }
      if (options_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Options);
      }
      if (fromLocation_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(FromLocation);
      }
      if (FromZone.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(FromZone);
      }
      if (SipCallId.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(SipCallId);
      }
      if (answerDuration_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(AnswerDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(From);
      }
      if (IsPrivate != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsPrivate);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (Transport != global::Enfonica.Voice.V1Beta1.Call.Types.Transport.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Transport);
      }
      if (Direction != global::Enfonica.Voice.V1Beta1.Call.Types.Direction.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Direction);
      }
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ErrorMessage);
      }
      if (price_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Price);
      }
      if (State != global::Enfonica.Voice.V1Beta1.Call.Types.State.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(StartTime);
      }
      if (ringTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RingTime);
      }
      if (answerTime_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(AnswerTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(EndTime);
      }
      if (Bridged != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Bridged);
      }
      if (OriginatingCall.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(OriginatingCall);
      }
      if (CreateMethod != global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod.Unspecified) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) CreateMethod);
      }
      if (options_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Options);
      }
      if (fromLocation_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(FromLocation);
      }
      if (FromZone.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(FromZone);
      }
      if (SipCallId.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(SipCallId);
      }
      if (answerDuration_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(AnswerDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (fromLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FromLocation);
      }
      if (FromZone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FromZone);
      }
      if (IsPrivate != false) {
        size += 1 + 1;
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Transport != global::Enfonica.Voice.V1Beta1.Call.Types.Transport.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Transport);
      }
      if (Direction != global::Enfonica.Voice.V1Beta1.Call.Types.Direction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (State != global::Enfonica.Voice.V1Beta1.Call.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (createTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (ringTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RingTime);
      }
      if (answerTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AnswerTime);
      }
      if (endTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Bridged != false) {
        size += 2 + 1;
      }
      if (OriginatingCall.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OriginatingCall);
      }
      if (CreateMethod != global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CreateMethod);
      }
      if (options_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (SipCallId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SipCallId);
      }
      if (answerDuration_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AnswerDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Call other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.fromLocation_ != null) {
        if (fromLocation_ == null) {
          FromLocation = new global::Enfonica.Voice.V1Beta1.NumberLocation();
        }
        FromLocation.MergeFrom(other.FromLocation);
      }
      if (other.FromZone.Length != 0) {
        FromZone = other.FromZone;
      }
      if (other.IsPrivate != false) {
        IsPrivate = other.IsPrivate;
      }
      labels_.Add(other.labels_);
      if (other.Transport != global::Enfonica.Voice.V1Beta1.Call.Types.Transport.Unspecified) {
        Transport = other.Transport;
      }
      if (other.Direction != global::Enfonica.Voice.V1Beta1.Call.Types.Direction.Unspecified) {
        Direction = other.Direction;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Google.Type.Money();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.State != global::Enfonica.Voice.V1Beta1.Call.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.ringTime_ != null) {
        if (ringTime_ == null) {
          RingTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RingTime.MergeFrom(other.RingTime);
      }
      if (other.answerTime_ != null) {
        if (answerTime_ == null) {
          AnswerTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AnswerTime.MergeFrom(other.AnswerTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Bridged != false) {
        Bridged = other.Bridged;
      }
      if (other.OriginatingCall.Length != 0) {
        OriginatingCall = other.OriginatingCall;
      }
      if (other.CreateMethod != global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod.Unspecified) {
        CreateMethod = other.CreateMethod;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.SipCallId.Length != 0) {
        SipCallId = other.SipCallId;
      }
      if (other.answerDuration_ != null) {
        if (answerDuration_ == null) {
          AnswerDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        AnswerDuration.MergeFrom(other.AnswerDuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            From = input.ReadString();
            break;
          }
          case 32: {
            IsPrivate = input.ReadBool();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 72: {
            Transport = (global::Enfonica.Voice.V1Beta1.Call.Types.Transport) input.ReadEnum();
            break;
          }
          case 80: {
            Direction = (global::Enfonica.Voice.V1Beta1.Call.Types.Direction) input.ReadEnum();
            break;
          }
          case 90: {
            ErrorCode = input.ReadString();
            break;
          }
          case 98: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 106: {
            if (price_ == null) {
              Price = new global::Google.Type.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 112: {
            State = (global::Enfonica.Voice.V1Beta1.Call.Types.State) input.ReadEnum();
            break;
          }
          case 130: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 138: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 146: {
            if (ringTime_ == null) {
              RingTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RingTime);
            break;
          }
          case 154: {
            if (answerTime_ == null) {
              AnswerTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AnswerTime);
            break;
          }
          case 162: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 168: {
            Bridged = input.ReadBool();
            break;
          }
          case 178: {
            OriginatingCall = input.ReadString();
            break;
          }
          case 184: {
            CreateMethod = (global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod) input.ReadEnum();
            break;
          }
          case 194: {
            if (options_ == null) {
              Options = new global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 202: {
            if (fromLocation_ == null) {
              FromLocation = new global::Enfonica.Voice.V1Beta1.NumberLocation();
            }
            input.ReadMessage(FromLocation);
            break;
          }
          case 210: {
            FromZone = input.ReadString();
            break;
          }
          case 218: {
            SipCallId = input.ReadString();
            break;
          }
          case 226: {
            if (answerDuration_ == null) {
              AnswerDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(AnswerDuration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            From = input.ReadString();
            break;
          }
          case 32: {
            IsPrivate = input.ReadBool();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 72: {
            Transport = (global::Enfonica.Voice.V1Beta1.Call.Types.Transport) input.ReadEnum();
            break;
          }
          case 80: {
            Direction = (global::Enfonica.Voice.V1Beta1.Call.Types.Direction) input.ReadEnum();
            break;
          }
          case 90: {
            ErrorCode = input.ReadString();
            break;
          }
          case 98: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 106: {
            if (price_ == null) {
              Price = new global::Google.Type.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 112: {
            State = (global::Enfonica.Voice.V1Beta1.Call.Types.State) input.ReadEnum();
            break;
          }
          case 130: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 138: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 146: {
            if (ringTime_ == null) {
              RingTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RingTime);
            break;
          }
          case 154: {
            if (answerTime_ == null) {
              AnswerTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AnswerTime);
            break;
          }
          case 162: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 168: {
            Bridged = input.ReadBool();
            break;
          }
          case 178: {
            OriginatingCall = input.ReadString();
            break;
          }
          case 184: {
            CreateMethod = (global::Enfonica.Voice.V1Beta1.Call.Types.CreateMethod) input.ReadEnum();
            break;
          }
          case 194: {
            if (options_ == null) {
              Options = new global::Enfonica.Voice.V1Beta1.Call.Types.ApiCallOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 202: {
            if (fromLocation_ == null) {
              FromLocation = new global::Enfonica.Voice.V1Beta1.NumberLocation();
            }
            input.ReadMessage(FromLocation);
            break;
          }
          case 210: {
            FromZone = input.ReadString();
            break;
          }
          case 218: {
            SipCallId = input.ReadString();
            break;
          }
          case 226: {
            if (answerDuration_ == null) {
              AnswerDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(AnswerDuration);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Call message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The state of a call.
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified status.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The call has been queued.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 1,
        /// <summary>
        /// The call is being attempted.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 2,
        /// <summary>
        /// The remote party is ringing.
        /// </summary>
        [pbr::OriginalName("RINGING")] Ringing = 3,
        /// <summary>
        /// The call has been answered.
        /// </summary>
        [pbr::OriginalName("IN_PROGRESS")] InProgress = 4,
        /// <summary>
        /// The call was answered and is now finished.
        /// </summary>
        [pbr::OriginalName("COMPLETED")] Completed = 5,
        /// <summary>
        /// The call could not be made.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 6,
        /// <summary>
        /// The call was not answered. This is the same as the call waiting to
        /// be answered and timing out.
        /// </summary>
        [pbr::OriginalName("NOT_ANSWERED")] NotAnswered = 7,
        /// <summary>
        /// The remote party indicated they were busy.
        /// </summary>
        [pbr::OriginalName("BUSY")] Busy = 8,
        /// <summary>
        /// The call was not answered and it was actively rejected.
        /// </summary>
        [pbr::OriginalName("REJECTED")] Rejected = 9,
      }

      /// <summary>
      /// The direction of a call.
      /// </summary>
      public enum Direction {
        /// <summary>
        /// Unspecified direction.
        /// </summary>
        [pbr::OriginalName("DIRECTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// An outgoing call.
        /// </summary>
        [pbr::OriginalName("OUTGOING")] Outgoing = 1,
        /// <summary>
        /// An incoming call
        /// </summary>
        [pbr::OriginalName("INCOMING")] Incoming = 2,
      }

      /// <summary>
      /// The transport of a call.
      /// </summary>
      public enum Transport {
        /// <summary>
        /// Unspecified transport.
        /// </summary>
        [pbr::OriginalName("TRANSPORT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The call was transported over PSTN (Public Switched Telephone Network).
        /// </summary>
        [pbr::OriginalName("PSTN")] Pstn = 1,
        /// <summary>
        /// The call was transported over an Enfonica Client (WebRTC).
        /// </summary>
        [pbr::OriginalName("CLIENT")] Client = 2,
        /// <summary>
        /// The call was transported over SIP.
        /// </summary>
        [pbr::OriginalName("SIP")] Sip = 3,
      }

      /// <summary>
      /// How a call was created.
      /// </summary>
      public enum CreateMethod {
        /// <summary>
        /// Unspecified create method.
        /// </summary>
        [pbr::OriginalName("CREATE_METHOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The call was created as a result of receiving an incoming call.
        /// </summary>
        [pbr::OriginalName("INCOMING_CALL")] IncomingCall = 1,
        /// <summary>
        /// The call was created by its parent call,
        /// e.g. VoiceML `&lt;Call>` or `&lt;Redirect>`.
        /// </summary>
        [pbr::OriginalName("PARENT_CALL")] ParentCall = 2,
        /// <summary>
        /// The call was creating using the API.
        /// </summary>
        [pbr::OriginalName("API")] Api = 3,
      }

      /// <summary>
      /// Options that are applied to the call when it is an outgoing call created
      /// by the API.
      /// </summary>
      public sealed partial class ApiCallOptions : pb::IMessage<ApiCallOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ApiCallOptions> _parser = new pb::MessageParser<ApiCallOptions>(() => new ApiCallOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ApiCallOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Enfonica.Voice.V1Beta1.Call.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ApiCallOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ApiCallOptions(ApiCallOptions other) : this() {
          handlerUris_ = other.handlerUris_.Clone();
          stateUpdateUri_ = other.stateUpdateUri_;
          timeoutSeconds_ = other.timeoutSeconds_;
          recording_ = other.recording_ != null ? other.recording_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ApiCallOptions Clone() {
          return new ApiCallOptions(this);
        }

        /// <summary>Field number for the "handler_uris" field.</summary>
        public const int HandlerUrisFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_handlerUris_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> handlerUris_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// One or more URIs where VoiceML requests should be made to control the call.
        /// The first URI will be attempted first, while the other URIs are only used
        /// if the initial URI fails. Can be any supported URI.
        /// Minimum 1 URI, maximum 5 URIs.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> HandlerUris {
          get { return handlerUris_; }
        }

        /// <summary>Field number for the "state_update_uri" field.</summary>
        public const int StateUpdateUriFieldNumber = 2;
        private string stateUpdateUri_ = "";
        /// <summary>
        /// The URL where state updates should be sent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StateUpdateUri {
          get { return stateUpdateUri_; }
          set {
            stateUpdateUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timeout_seconds" field.</summary>
        public const int TimeoutSecondsFieldNumber = 3;
        private int timeoutSeconds_;
        /// <summary>
        /// The maximum amount of time, in seconds, the call is allowed to attempt an endpoint.
        /// Default 30 seconds. Minimum 1, maximum 600 seconds.
        /// (-- api-linter: core::0142::time-field-type=disabled
        ///     aip.dev/not-precedent: This is not a timestamp. --)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TimeoutSeconds {
          get { return timeoutSeconds_; }
          set {
            timeoutSeconds_ = value;
          }
        }

        /// <summary>Field number for the "recording" field.</summary>
        public const int RecordingFieldNumber = 4;
        private global::Enfonica.Voice.V1Beta1.CallRecordingConfig recording_;
        /// <summary>
        /// The configuration of call recording. If not specified, no call recording
        /// will be configured.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Enfonica.Voice.V1Beta1.CallRecordingConfig Recording {
          get { return recording_; }
          set {
            recording_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ApiCallOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ApiCallOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!handlerUris_.Equals(other.handlerUris_)) return false;
          if (StateUpdateUri != other.StateUpdateUri) return false;
          if (TimeoutSeconds != other.TimeoutSeconds) return false;
          if (!object.Equals(Recording, other.Recording)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= handlerUris_.GetHashCode();
          if (StateUpdateUri.Length != 0) hash ^= StateUpdateUri.GetHashCode();
          if (TimeoutSeconds != 0) hash ^= TimeoutSeconds.GetHashCode();
          if (recording_ != null) hash ^= Recording.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          handlerUris_.WriteTo(output, _repeated_handlerUris_codec);
          if (StateUpdateUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(StateUpdateUri);
          }
          if (TimeoutSeconds != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(TimeoutSeconds);
          }
          if (recording_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Recording);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          handlerUris_.WriteTo(ref output, _repeated_handlerUris_codec);
          if (StateUpdateUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(StateUpdateUri);
          }
          if (TimeoutSeconds != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(TimeoutSeconds);
          }
          if (recording_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Recording);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += handlerUris_.CalculateSize(_repeated_handlerUris_codec);
          if (StateUpdateUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StateUpdateUri);
          }
          if (TimeoutSeconds != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeoutSeconds);
          }
          if (recording_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recording);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ApiCallOptions other) {
          if (other == null) {
            return;
          }
          handlerUris_.Add(other.handlerUris_);
          if (other.StateUpdateUri.Length != 0) {
            StateUpdateUri = other.StateUpdateUri;
          }
          if (other.TimeoutSeconds != 0) {
            TimeoutSeconds = other.TimeoutSeconds;
          }
          if (other.recording_ != null) {
            if (recording_ == null) {
              Recording = new global::Enfonica.Voice.V1Beta1.CallRecordingConfig();
            }
            Recording.MergeFrom(other.Recording);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                handlerUris_.AddEntriesFrom(input, _repeated_handlerUris_codec);
                break;
              }
              case 18: {
                StateUpdateUri = input.ReadString();
                break;
              }
              case 24: {
                TimeoutSeconds = input.ReadInt32();
                break;
              }
              case 34: {
                if (recording_ == null) {
                  Recording = new global::Enfonica.Voice.V1Beta1.CallRecordingConfig();
                }
                input.ReadMessage(Recording);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                handlerUris_.AddEntriesFrom(ref input, _repeated_handlerUris_codec);
                break;
              }
              case 18: {
                StateUpdateUri = input.ReadString();
                break;
              }
              case 24: {
                TimeoutSeconds = input.ReadInt32();
                break;
              }
              case 34: {
                if (recording_ == null) {
                  Recording = new global::Enfonica.Voice.V1Beta1.CallRecordingConfig();
                }
                input.ReadMessage(Recording);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Location information for a phone number.
  /// </summary>
  public sealed partial class NumberLocation : pb::IMessage<NumberLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NumberLocation> _parser = new pb::MessageParser<NumberLocation>(() => new NumberLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumberLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.CallsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberLocation(NumberLocation other) : this() {
      regionCode_ = other.regionCode_;
      administrativeArea_ = other.administrativeArea_;
      locality_ = other.locality_;
      coordinates_ = other.coordinates_ != null ? other.coordinates_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberLocation Clone() {
      return new NumberLocation(this);
    }

    /// <summary>Field number for the "region_code" field.</summary>
    public const int RegionCodeFieldNumber = 1;
    private string regionCode_ = "";
    /// <summary>
    /// CLDR region code of the country/region. See http://cldr.unicode.org/ and
    /// http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
    /// for details. Example: "AU" for Australia.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionCode {
      get { return regionCode_; }
      set {
        regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "administrative_area" field.</summary>
    public const int AdministrativeAreaFieldNumber = 2;
    private string administrativeArea_ = "";
    /// <summary>
    /// If known, the highest administrative subdivision of a country or region.
    /// For example, this can be a state, a territory, a province, an oblast, or a
    /// prefecture.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdministrativeArea {
      get { return administrativeArea_; }
      set {
        administrativeArea_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locality" field.</summary>
    public const int LocalityFieldNumber = 3;
    private string locality_ = "";
    /// <summary>
    /// If known, the locality associated with the phone number.
    /// Generally refers to the city/town portion of the address.
    /// Examples: AU suburb, US city, IT comune, UK post town.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locality {
      get { return locality_; }
      set {
        locality_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 4;
    private global::Google.Type.LatLng coordinates_;
    /// <summary>
    /// If known, the approximate coordinates of the location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.LatLng Coordinates {
      get { return coordinates_; }
      set {
        coordinates_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumberLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumberLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionCode != other.RegionCode) return false;
      if (AdministrativeArea != other.AdministrativeArea) return false;
      if (Locality != other.Locality) return false;
      if (!object.Equals(Coordinates, other.Coordinates)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
      if (AdministrativeArea.Length != 0) hash ^= AdministrativeArea.GetHashCode();
      if (Locality.Length != 0) hash ^= Locality.GetHashCode();
      if (coordinates_ != null) hash ^= Coordinates.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RegionCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionCode);
      }
      if (AdministrativeArea.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdministrativeArea);
      }
      if (Locality.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Locality);
      }
      if (coordinates_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Coordinates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RegionCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionCode);
      }
      if (AdministrativeArea.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdministrativeArea);
      }
      if (Locality.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Locality);
      }
      if (coordinates_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Coordinates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
      }
      if (AdministrativeArea.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdministrativeArea);
      }
      if (Locality.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locality);
      }
      if (coordinates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Coordinates);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumberLocation other) {
      if (other == null) {
        return;
      }
      if (other.RegionCode.Length != 0) {
        RegionCode = other.RegionCode;
      }
      if (other.AdministrativeArea.Length != 0) {
        AdministrativeArea = other.AdministrativeArea;
      }
      if (other.Locality.Length != 0) {
        Locality = other.Locality;
      }
      if (other.coordinates_ != null) {
        if (coordinates_ == null) {
          Coordinates = new global::Google.Type.LatLng();
        }
        Coordinates.MergeFrom(other.Coordinates);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegionCode = input.ReadString();
            break;
          }
          case 18: {
            AdministrativeArea = input.ReadString();
            break;
          }
          case 26: {
            Locality = input.ReadString();
            break;
          }
          case 34: {
            if (coordinates_ == null) {
              Coordinates = new global::Google.Type.LatLng();
            }
            input.ReadMessage(Coordinates);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RegionCode = input.ReadString();
            break;
          }
          case 18: {
            AdministrativeArea = input.ReadString();
            break;
          }
          case 26: {
            Locality = input.ReadString();
            break;
          }
          case 34: {
            if (coordinates_ == null) {
              Coordinates = new global::Google.Type.LatLng();
            }
            input.ReadMessage(Coordinates);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to create a new call.
  /// </summary>
  public sealed partial class CreateCallRequest : pb::IMessage<CreateCallRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateCallRequest> _parser = new pb::MessageParser<CreateCallRequest>(() => new CreateCallRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCallRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.CallsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCallRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCallRequest(CreateCallRequest other) : this() {
      parent_ = other.parent_;
      call_ = other.call_ != null ? other.call_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCallRequest Clone() {
      return new CreateCallRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The project under which to create the call in the form `projects/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call" field.</summary>
    public const int CallFieldNumber = 2;
    private global::Enfonica.Voice.V1Beta1.Call call_;
    /// <summary>
    /// The call resource to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Call Call {
      get { return call_; }
      set {
        call_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCallRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCallRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Call, other.Call)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (call_ != null) hash ^= Call.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (call_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Call);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (call_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Call);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (call_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Call);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCallRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.call_ != null) {
        if (call_ == null) {
          Call = new global::Enfonica.Voice.V1Beta1.Call();
        }
        Call.MergeFrom(other.Call);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (call_ == null) {
              Call = new global::Enfonica.Voice.V1Beta1.Call();
            }
            input.ReadMessage(Call);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (call_ == null) {
              Call = new global::Enfonica.Voice.V1Beta1.Call();
            }
            input.ReadMessage(Call);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The GetCall request call.
  /// </summary>
  public sealed partial class GetCallRequest : pb::IMessage<GetCallRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCallRequest> _parser = new pb::MessageParser<GetCallRequest>(() => new GetCallRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCallRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.CallsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCallRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCallRequest(GetCallRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCallRequest Clone() {
      return new GetCallRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Call to retrieve.
    /// Must be of the form `projects/*/calls/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCallRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCallRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCallRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListCalls request call.
  /// </summary>
  public sealed partial class ListCallsRequest : pb::IMessage<ListCallsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListCallsRequest> _parser = new pb::MessageParser<ListCallsRequest>(() => new ListCallsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCallsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.CallsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCallsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCallsRequest(ListCallsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCallsRequest Clone() {
      return new ListCallsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The resource name of the parent of which to list calls.
    /// Must be of the form `projects/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of Calls to return in the response.
    /// Default value of 10 and maximum value of 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListCalls`
    /// that indicates where this listing should continue from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Filter string to specify which results should be returned.
    ///
    /// The following fields can be filtered:
    /// - `createTime`
    /// - `to`
    /// - `from`
    /// - `state`
    /// - `direction`
    /// - `transport`
    ///
    /// For example:
    /// createTime >= '2021-01-01T06:00:00.0Z' AND createTime &lt; '2021-02-01' AND
    /// state = COMPLETED OR state = BUSY AND to = '+61*' OR from = '+61*'
    ///
    /// Note that OR has higher precendence than AND.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCallsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCallsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCallsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListCalls response call.
  /// </summary>
  public sealed partial class ListCallsResponse : pb::IMessage<ListCallsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListCallsResponse> _parser = new pb::MessageParser<ListCallsResponse>(() => new ListCallsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCallsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.CallsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCallsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCallsResponse(ListCallsResponse other) : this() {
      calls_ = other.calls_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCallsResponse Clone() {
      return new ListCallsResponse(this);
    }

    /// <summary>Field number for the "calls" field.</summary>
    public const int CallsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Enfonica.Voice.V1Beta1.Call> _repeated_calls_codec
        = pb::FieldCodec.ForMessage(10, global::Enfonica.Voice.V1Beta1.Call.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Call> calls_ = new pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Call>();
    /// <summary>
    /// A possibly paginated list of Calls that are direct descendants of
    /// the specified parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Call> Calls {
      get { return calls_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListCalls`
    /// that indicates from where listing should continue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCallsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCallsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!calls_.Equals(other.calls_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= calls_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      calls_.WriteTo(output, _repeated_calls_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      calls_.WriteTo(ref output, _repeated_calls_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += calls_.CalculateSize(_repeated_calls_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCallsResponse other) {
      if (other == null) {
        return;
      }
      calls_.Add(other.calls_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            calls_.AddEntriesFrom(input, _repeated_calls_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            calls_.AddEntriesFrom(ref input, _repeated_calls_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
