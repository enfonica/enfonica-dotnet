// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enfonica/voice/v1beta1/sip_domains.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Enfonica.Voice.V1Beta1 {

  /// <summary>Holder for reflection information generated from enfonica/voice/v1beta1/sip_domains.proto</summary>
  public static partial class SipDomainsReflection {

    #region Descriptor
    /// <summary>File descriptor for enfonica/voice/v1beta1/sip_domains.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SipDomainsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihlbmZvbmljYS92b2ljZS92MWJldGExL3NpcF9kb21haW5zLnByb3RvEhZl",
            "bmZvbmljYS52b2ljZS52MWJldGExGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGiBnb29nbGUvcHJvdG9idWYvZmllbGRfbWFzay5wcm90bxoc",
            "Z29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoXZ29vZ2xlL2FwaS9jbGll",
            "bnQucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdv",
            "b2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aMmVuZm9uaWNhL3ZvaWNlL3YxYmV0",
            "YTEvY2FsbF9yZWNvcmRpbmdfY29uZmlnLnByb3RvIo4FCglTaXBEb21haW4S",
            "DAoEbmFtZRgBIAEoCRIaCg1zaXBfZG9tYWluX2lkGAIgASgJQgPgQQMSFAoM",
            "ZGlzcGxheV9uYW1lGAMgASgJEhYKDmFsbG93X3JlZ2lzdGVyGAQgASgIElAK",
            "FWNhbGxfdGVybWluYXRpb25fbW9kZRgFIAEoDjIxLmVuZm9uaWNhLnZvaWNl",
            "LnYxYmV0YTEuU2lwRG9tYWluLlRlcm1pbmF0aW9uTW9kZRIlCh1jYWxsX3Rl",
            "cm1pbmF0aW9uX2hhbmRsZXJfdXJpcxgGIAMoCRI2CgtjaWRyX2Jsb2NrcxgI",
            "IAMoCzIhLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEuQ2lkckJsb2NrEkMKDmNh",
            "bGxfcmVjb3JkaW5nGAkgASgLMisuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5D",
            "YWxsUmVjb3JkaW5nQ29uZmlnEjQKC2NyZWF0ZV90aW1lGAogASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC2RlbGV0ZV90aW1lGAsg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDInQKD1Rlcm1p",
            "bmF0aW9uTW9kZRIgChxURVJNSU5BVElPTl9NT0RFX1VOU1BFQ0lGSUVEEAAS",
            "HQoZVEVSTUlOQVRJT05fTU9ERV9ESVNBQkxFRBABEg4KClBTVE5fVFJVTksQ",
            "AhIQCgxQUk9HUkFNTUFCTEUQAzpR6kFOCiB2b2ljZS5hcGkuZW5mb25pY2Eu",
            "Y29tL1NpcERvbWFpbhIqcHJvamVjdHMve3Byb2plY3R9L3NpcERvbWFpbnMv",
            "e3NpcF9kb21haW59IjUKCUNpZHJCbG9jaxIUCgxkaXNwbGF5X25hbWUYASAB",
            "KAkSEgoKY2lkcl9ibG9jaxgCIAEoCSKqAQoWQ3JlYXRlU2lwRG9tYWluUmVx",
            "dWVzdBI4CgZwYXJlbnQYASABKAlCKOBBAvpBIhIgdm9pY2UuYXBpLmVuZm9u",
            "aWNhLmNvbS9TaXBEb21haW4SOgoKc2lwX2RvbWFpbhgCIAEoCzIhLmVuZm9u",
            "aWNhLnZvaWNlLnYxYmV0YTEuU2lwRG9tYWluQgPgQQISGgoNc2lwX2RvbWFp",
            "bl9pZBgDIAEoCUID4EECIk0KE0dldFNpcERvbWFpblJlcXVlc3QSNgoEbmFt",
            "ZRgBIAEoCUIo4EEC+kEiCiB2b2ljZS5hcGkuZW5mb25pY2EuY29tL1NpcERv",
            "bWFpbiKOAQoVTGlzdFNpcERvbWFpbnNSZXF1ZXN0EjgKBnBhcmVudBgBIAEo",
            "CUIo4EEC+kEiEiB2b2ljZS5hcGkuZW5mb25pY2EuY29tL1NpcERvbWFpbhIR",
            "CglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRIUCgxzaG93",
            "X2RlbGV0ZWQYBCABKAgiaQoWTGlzdFNpcERvbWFpbnNSZXNwb25zZRI2Cgtz",
            "aXBfZG9tYWlucxgBIAMoCzIhLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEuU2lw",
            "RG9tYWluEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKFAQoWVXBkYXRlU2lw",
            "RG9tYWluUmVxdWVzdBI6CgpzaXBfZG9tYWluGAEgASgLMiEuZW5mb25pY2Eu",
            "dm9pY2UudjFiZXRhMS5TaXBEb21haW5CA+BBAhIvCgt1cGRhdGVfbWFzaxgC",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siUAoWRGVsZXRlU2lw",
            "RG9tYWluUmVxdWVzdBI2CgRuYW1lGAEgASgJQijgQQL6QSIKIHZvaWNlLmFw",
            "aS5lbmZvbmljYS5jb20vU2lwRG9tYWluMr8HCgpTaXBEb21haW5zEsMBCg9D",
            "cmVhdGVTaXBEb21haW4SLi5lbmZvbmljYS52b2ljZS52MWJldGExLkNyZWF0",
            "ZVNpcERvbWFpblJlcXVlc3QaIS5lbmZvbmljYS52b2ljZS52MWJldGExLlNp",
            "cERvbWFpbiJdgtPkkwI1IicvdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyp9",
            "L3NpcERvbWFpbnM6CnNpcF9kb21haW7aQR9wYXJlbnQsc2lwX2RvbWFpbixz",
            "aXBfZG9tYWluX2lkEpYBCgxHZXRTaXBEb21haW4SKy5lbmZvbmljYS52b2lj",
            "ZS52MWJldGExLkdldFNpcERvbWFpblJlcXVlc3QaIS5lbmZvbmljYS52b2lj",
            "ZS52MWJldGExLlNpcERvbWFpbiI2gtPkkwIpEicvdjFiZXRhMS97bmFtZT1w",
            "cm9qZWN0cy8qL3NpcERvbWFpbnMvKn3aQQRuYW1lEqkBCg5MaXN0U2lwRG9t",
            "YWlucxItLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEuTGlzdFNpcERvbWFpbnNS",
            "ZXF1ZXN0Gi4uZW5mb25pY2Eudm9pY2UudjFiZXRhMS5MaXN0U2lwRG9tYWlu",
            "c1Jlc3BvbnNlIjiC0+STAikSJy92MWJldGExL3twYXJlbnQ9cHJvamVjdHMv",
            "Kn0vc2lwRG9tYWluc9pBBnBhcmVudBLFAQoPVXBkYXRlU2lwRG9tYWluEi4u",
            "ZW5mb25pY2Eudm9pY2UudjFiZXRhMS5VcGRhdGVTaXBEb21haW5SZXF1ZXN0",
            "GiEuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5TaXBEb21haW4iX4LT5JMCQDIy",
            "L3YxYmV0YTEve3NpcF9kb21haW4ubmFtZT1wcm9qZWN0cy8qL3NpcERvbWFp",
            "bnMvKn06CnNpcF9kb21haW7aQRZzaXBfZG9tYWluLHVwZGF0ZV9tYXNrEpwB",
            "Cg9EZWxldGVTaXBEb21haW4SLi5lbmZvbmljYS52b2ljZS52MWJldGExLkRl",
            "bGV0ZVNpcERvbWFpblJlcXVlc3QaIS5lbmZvbmljYS52b2ljZS52MWJldGEx",
            "LlNpcERvbWFpbiI2gtPkkwIpKicvdjFiZXRhMS97bmFtZT1wcm9qZWN0cy8q",
            "L3NpcERvbWFpbnMvKn3aQQRuYW1lGj/KQRZ2b2ljZS5hcGkuZW5mb25pY2Eu",
            "Y29t0kEjaHR0cHM6Ly9hcGkuZW5mb25pY2EuY29tL2F1dGgvdm9pY2VCiAEK",
            "GmNvbS5lbmZvbmljYS52b2ljZS52MWJldGExQg9TaXBEb21haW5zUHJvdG9Q",
            "AVozZ2l0aHViLmNvbS9lbmZvbmljYS9lbmZvbmljYS1nby92b2ljZS92MWJl",
            "dGExO3ZvaWNl+AEBogIFRU5GT06qAhZFbmZvbmljYS5Wb2ljZS5WMUJldGEx",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Enfonica.Voice.V1Beta1.CallRecordingConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.SipDomain), global::Enfonica.Voice.V1Beta1.SipDomain.Parser, new[]{ "Name", "SipDomainId", "DisplayName", "AllowRegister", "CallTerminationMode", "CallTerminationHandlerUris", "CidrBlocks", "CallRecording", "CreateTime", "DeleteTime" }, null, new[]{ typeof(global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.CidrBlock), global::Enfonica.Voice.V1Beta1.CidrBlock.Parser, new[]{ "DisplayName", "CidrBlock_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.CreateSipDomainRequest), global::Enfonica.Voice.V1Beta1.CreateSipDomainRequest.Parser, new[]{ "Parent", "SipDomain", "SipDomainId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.GetSipDomainRequest), global::Enfonica.Voice.V1Beta1.GetSipDomainRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.ListSipDomainsRequest), global::Enfonica.Voice.V1Beta1.ListSipDomainsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "ShowDeleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.ListSipDomainsResponse), global::Enfonica.Voice.V1Beta1.ListSipDomainsResponse.Parser, new[]{ "SipDomains", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.UpdateSipDomainRequest), global::Enfonica.Voice.V1Beta1.UpdateSipDomainRequest.Parser, new[]{ "SipDomain", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.DeleteSipDomainRequest), global::Enfonica.Voice.V1Beta1.DeleteSipDomainRequest.Parser, new[]{ "Name" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The SipDomain resource.
  /// </summary>
  public sealed partial class SipDomain : pb::IMessage<SipDomain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SipDomain> _parser = new pb::MessageParser<SipDomain>(() => new SipDomain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SipDomain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SipDomain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SipDomain(SipDomain other) : this() {
      name_ = other.name_;
      sipDomainId_ = other.sipDomainId_;
      displayName_ = other.displayName_;
      allowRegister_ = other.allowRegister_;
      callTerminationMode_ = other.callTerminationMode_;
      callTerminationHandlerUris_ = other.callTerminationHandlerUris_.Clone();
      cidrBlocks_ = other.cidrBlocks_.Clone();
      callRecording_ = other.callRecording_ != null ? other.callRecording_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      deleteTime_ = other.deleteTime_ != null ? other.deleteTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SipDomain Clone() {
      return new SipDomain(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the sip domain. It must match the pattern
    /// `projects/{project_id}/sipDomains/{sip_domain_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sip_domain_id" field.</summary>
    public const int SipDomainIdFieldNumber = 2;
    private string sipDomainId_ = "";
    /// <summary>
    /// The subdomain component of the SIP domain. This is the {sip_domain_id} value
    /// from `name` and is a convenience field. The FQDN of the SIP domain
    /// will be &lt;sip_domain_id>.sip.enfonica.com.
    ///
    /// This value must be globally unique.
    ///
    /// This must be lowercase alpha-numeric or hyphens and
    /// must start and end with an alpha-numeric character, and must be a minimum of 2 and maximum of 30 characters. 
    /// This is captured in the following regular expression: ^[a-z0-9][a-z0-9-]{0,28}[a-z0-9]$
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SipDomainId {
      get { return sipDomainId_; }
      set {
        sipDomainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    /// <summary>
    /// The display name of the sip domain for use in the UI.
    /// Max length 100 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_register" field.</summary>
    public const int AllowRegisterFieldNumber = 4;
    private bool allowRegister_;
    /// <summary>
    /// Whether REGISTER is supported for users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowRegister {
      get { return allowRegister_; }
      set {
        allowRegister_ = value;
      }
    }

    /// <summary>Field number for the "call_termination_mode" field.</summary>
    public const int CallTerminationModeFieldNumber = 5;
    private global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode callTerminationMode_ = global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode.Unspecified;
    /// <summary>
    /// How call termination will be handled. This can be configured to act as a simple SIP trunk,
    /// or as a programmable SIP domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode CallTerminationMode {
      get { return callTerminationMode_; }
      set {
        callTerminationMode_ = value;
      }
    }

    /// <summary>Field number for the "call_termination_handler_uris" field.</summary>
    public const int CallTerminationHandlerUrisFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_callTerminationHandlerUris_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> callTerminationHandlerUris_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of URIs in priority order that will be executed for call termination.
    /// This is only used when call_termination_mode is PROGRAMMABLE.
    ///
    /// The first URI is the primary, and the subsequent URIs are used in order
    /// if the previous URIs fail.
    ///
    /// The following URIs are supported:
    /// - absolute `http` and `https` URIs.
    ///
    /// Additional URIs may be supported in the future.
    ///
    /// Maximum 5 URIs.
    ///
    /// At least one entry must be specified when call_termination_mode is PROGRAMMABLE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CallTerminationHandlerUris {
      get { return callTerminationHandlerUris_; }
    }

    /// <summary>Field number for the "cidr_blocks" field.</summary>
    public const int CidrBlocksFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Enfonica.Voice.V1Beta1.CidrBlock> _repeated_cidrBlocks_codec
        = pb::FieldCodec.ForMessage(66, global::Enfonica.Voice.V1Beta1.CidrBlock.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.CidrBlock> cidrBlocks_ = new pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.CidrBlock>();
    /// <summary>
    /// A list of up to 100 IP blocks that are permitted to use this SIP domain.
    ///
    /// How authorization works changes based on this whitelist and users:
    /// - If this list is empty and there are no users defined, the SIP domain cannot be used.
    /// - If this list is specified and there are no users defined, any IP that matches the
    ///   whitelist can place calls without authentication.
    /// - If this list is specified and users are defined, user authentication is required
    ///   and can only occur when their IP matches this whitelist.
    ///
    /// (-- api-linter: core::0203::required=disabled
    ///     aip.dev/not-precedent: Rule triggering incorrectly. --)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.CidrBlock> CidrBlocks {
      get { return cidrBlocks_; }
    }

    /// <summary>Field number for the "call_recording" field.</summary>
    public const int CallRecordingFieldNumber = 9;
    private global::Enfonica.Voice.V1Beta1.CallRecordingConfig callRecording_;
    /// <summary>
    /// The configuration of call recording and transcription. If not set, then
    /// call recording is disabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.CallRecordingConfig CallRecording {
      get { return callRecording_; }
      set {
        callRecording_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The creation time of the sip domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "delete_time" field.</summary>
    public const int DeleteTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deleteTime_;
    /// <summary>
    /// The deletion time of the sip domain, if it has been deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SipDomain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SipDomain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SipDomainId != other.SipDomainId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (AllowRegister != other.AllowRegister) return false;
      if (CallTerminationMode != other.CallTerminationMode) return false;
      if(!callTerminationHandlerUris_.Equals(other.callTerminationHandlerUris_)) return false;
      if(!cidrBlocks_.Equals(other.cidrBlocks_)) return false;
      if (!object.Equals(CallRecording, other.CallRecording)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(DeleteTime, other.DeleteTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SipDomainId.Length != 0) hash ^= SipDomainId.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (AllowRegister != false) hash ^= AllowRegister.GetHashCode();
      if (CallTerminationMode != global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode.Unspecified) hash ^= CallTerminationMode.GetHashCode();
      hash ^= callTerminationHandlerUris_.GetHashCode();
      hash ^= cidrBlocks_.GetHashCode();
      if (callRecording_ != null) hash ^= CallRecording.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (deleteTime_ != null) hash ^= DeleteTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SipDomainId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SipDomainId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (AllowRegister != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllowRegister);
      }
      if (CallTerminationMode != global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CallTerminationMode);
      }
      callTerminationHandlerUris_.WriteTo(output, _repeated_callTerminationHandlerUris_codec);
      cidrBlocks_.WriteTo(output, _repeated_cidrBlocks_codec);
      if (callRecording_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CallRecording);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DeleteTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SipDomainId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SipDomainId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (AllowRegister != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllowRegister);
      }
      if (CallTerminationMode != global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CallTerminationMode);
      }
      callTerminationHandlerUris_.WriteTo(ref output, _repeated_callTerminationHandlerUris_codec);
      cidrBlocks_.WriteTo(ref output, _repeated_cidrBlocks_codec);
      if (callRecording_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CallRecording);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DeleteTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SipDomainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SipDomainId);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (AllowRegister != false) {
        size += 1 + 1;
      }
      if (CallTerminationMode != global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CallTerminationMode);
      }
      size += callTerminationHandlerUris_.CalculateSize(_repeated_callTerminationHandlerUris_codec);
      size += cidrBlocks_.CalculateSize(_repeated_cidrBlocks_codec);
      if (callRecording_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallRecording);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (deleteTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SipDomain other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SipDomainId.Length != 0) {
        SipDomainId = other.SipDomainId;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.AllowRegister != false) {
        AllowRegister = other.AllowRegister;
      }
      if (other.CallTerminationMode != global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode.Unspecified) {
        CallTerminationMode = other.CallTerminationMode;
      }
      callTerminationHandlerUris_.Add(other.callTerminationHandlerUris_);
      cidrBlocks_.Add(other.cidrBlocks_);
      if (other.callRecording_ != null) {
        if (callRecording_ == null) {
          CallRecording = new global::Enfonica.Voice.V1Beta1.CallRecordingConfig();
        }
        CallRecording.MergeFrom(other.CallRecording);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.deleteTime_ != null) {
        if (deleteTime_ == null) {
          DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeleteTime.MergeFrom(other.DeleteTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SipDomainId = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 32: {
            AllowRegister = input.ReadBool();
            break;
          }
          case 40: {
            CallTerminationMode = (global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode) input.ReadEnum();
            break;
          }
          case 50: {
            callTerminationHandlerUris_.AddEntriesFrom(input, _repeated_callTerminationHandlerUris_codec);
            break;
          }
          case 66: {
            cidrBlocks_.AddEntriesFrom(input, _repeated_cidrBlocks_codec);
            break;
          }
          case 74: {
            if (callRecording_ == null) {
              CallRecording = new global::Enfonica.Voice.V1Beta1.CallRecordingConfig();
            }
            input.ReadMessage(CallRecording);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SipDomainId = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 32: {
            AllowRegister = input.ReadBool();
            break;
          }
          case 40: {
            CallTerminationMode = (global::Enfonica.Voice.V1Beta1.SipDomain.Types.TerminationMode) input.ReadEnum();
            break;
          }
          case 50: {
            callTerminationHandlerUris_.AddEntriesFrom(ref input, _repeated_callTerminationHandlerUris_codec);
            break;
          }
          case 66: {
            cidrBlocks_.AddEntriesFrom(ref input, _repeated_cidrBlocks_codec);
            break;
          }
          case 74: {
            if (callRecording_ == null) {
              CallRecording = new global::Enfonica.Voice.V1Beta1.CallRecordingConfig();
            }
            input.ReadMessage(CallRecording);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SipDomain message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Call termination modes.
      /// </summary>
      public enum TerminationMode {
        /// <summary>
        /// Unspecified termination mode.
        /// </summary>
        [pbr::OriginalName("TERMINATION_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Call termination is not permitted.
        /// </summary>
        [pbr::OriginalName("TERMINATION_MODE_DISABLED")] Disabled = 1,
        /// <summary>
        /// Calls to this SIP domain will be routed over the PSTN.
        /// </summary>
        [pbr::OriginalName("PSTN_TRUNK")] PstnTrunk = 2,
        /// <summary>
        /// Calls to this SIP domain will be handled by a VoiceML endpoint.
        /// </summary>
        [pbr::OriginalName("PROGRAMMABLE")] Programmable = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Repesents a block of IPv4 addresses.
  /// </summary>
  public sealed partial class CidrBlock : pb::IMessage<CidrBlock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CidrBlock> _parser = new pb::MessageParser<CidrBlock>(() => new CidrBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CidrBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CidrBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CidrBlock(CidrBlock other) : this() {
      displayName_ = other.displayName_;
      cidrBlock_ = other.cidrBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CidrBlock Clone() {
      return new CidrBlock(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// The display name of this CIDR block. May be up to 100 characters in length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cidr_block" field.</summary>
    public const int CidrBlock_FieldNumber = 2;
    private string cidrBlock_ = "";
    /// <summary>
    /// The block of IPv4 addresses in CIDR notation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CidrBlock_ {
      get { return cidrBlock_; }
      set {
        cidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CidrBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CidrBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (CidrBlock_ != other.CidrBlock_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (CidrBlock_.Length != 0) hash ^= CidrBlock_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (CidrBlock_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CidrBlock_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (CidrBlock_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CidrBlock_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (CidrBlock_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CidrBlock_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CidrBlock other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.CidrBlock_.Length != 0) {
        CidrBlock_ = other.CidrBlock_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            CidrBlock_ = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            CidrBlock_ = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to create a new sip domain.
  /// </summary>
  public sealed partial class CreateSipDomainRequest : pb::IMessage<CreateSipDomainRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateSipDomainRequest> _parser = new pb::MessageParser<CreateSipDomainRequest>(() => new CreateSipDomainRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSipDomainRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSipDomainRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSipDomainRequest(CreateSipDomainRequest other) : this() {
      parent_ = other.parent_;
      sipDomain_ = other.sipDomain_ != null ? other.sipDomain_.Clone() : null;
      sipDomainId_ = other.sipDomainId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSipDomainRequest Clone() {
      return new CreateSipDomainRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The project under which to create the sip domain
    /// in the form `projects/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sip_domain" field.</summary>
    public const int SipDomainFieldNumber = 2;
    private global::Enfonica.Voice.V1Beta1.SipDomain sipDomain_;
    /// <summary>
    /// The sip domain resource to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.SipDomain SipDomain {
      get { return sipDomain_; }
      set {
        sipDomain_ = value;
      }
    }

    /// <summary>Field number for the "sip_domain_id" field.</summary>
    public const int SipDomainIdFieldNumber = 3;
    private string sipDomainId_ = "";
    /// <summary>
    /// The subdomain component of the SIP domain. This is the {sip_domain_id} value
    /// from `name` and can only be set on create. The FQDN of the SIP domain
    /// will be &lt;sip_domain_id>.sip.enfonica.com.
    ///
    /// This value must be globally unique. If the identifier already exists, the create
    /// method will fail with ALREADY_EXISTS.
    ///
    /// This must be lowercase alpha-numeric or hyphens and
    /// must start and end with an alpha-numeric character, and must be a minimum of 2 and maximum of 30 characters. 
    /// This is captured in the following regular expression: ^[a-z0-9][a-z0-9-]{0,28}[a-z0-9]$
    /// Can only be set on create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SipDomainId {
      get { return sipDomainId_; }
      set {
        sipDomainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSipDomainRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSipDomainRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(SipDomain, other.SipDomain)) return false;
      if (SipDomainId != other.SipDomainId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (sipDomain_ != null) hash ^= SipDomain.GetHashCode();
      if (SipDomainId.Length != 0) hash ^= SipDomainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (sipDomain_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SipDomain);
      }
      if (SipDomainId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SipDomainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (sipDomain_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SipDomain);
      }
      if (SipDomainId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SipDomainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (sipDomain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SipDomain);
      }
      if (SipDomainId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SipDomainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSipDomainRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.sipDomain_ != null) {
        if (sipDomain_ == null) {
          SipDomain = new global::Enfonica.Voice.V1Beta1.SipDomain();
        }
        SipDomain.MergeFrom(other.SipDomain);
      }
      if (other.SipDomainId.Length != 0) {
        SipDomainId = other.SipDomainId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (sipDomain_ == null) {
              SipDomain = new global::Enfonica.Voice.V1Beta1.SipDomain();
            }
            input.ReadMessage(SipDomain);
            break;
          }
          case 26: {
            SipDomainId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (sipDomain_ == null) {
              SipDomain = new global::Enfonica.Voice.V1Beta1.SipDomain();
            }
            input.ReadMessage(SipDomain);
            break;
          }
          case 26: {
            SipDomainId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The GetSipDomain request message.
  /// </summary>
  public sealed partial class GetSipDomainRequest : pb::IMessage<GetSipDomainRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSipDomainRequest> _parser = new pb::MessageParser<GetSipDomainRequest>(() => new GetSipDomainRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSipDomainRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSipDomainRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSipDomainRequest(GetSipDomainRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSipDomainRequest Clone() {
      return new GetSipDomainRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the sip domain to retrieve.
    /// Must be of the form `projects/*/sipDomains/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSipDomainRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSipDomainRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSipDomainRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListSipDomains request.
  /// </summary>
  public sealed partial class ListSipDomainsRequest : pb::IMessage<ListSipDomainsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListSipDomainsRequest> _parser = new pb::MessageParser<ListSipDomainsRequest>(() => new ListSipDomainsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSipDomainsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSipDomainsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSipDomainsRequest(ListSipDomainsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      showDeleted_ = other.showDeleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSipDomainsRequest Clone() {
      return new ListSipDomainsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The project under which to list sip domain, in the form `projects/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of sip domain to return in the response.
    /// Default value of 10 and maximum value of 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListSipDomains`
    /// that indicates where this listing should continue from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "show_deleted" field.</summary>
    public const int ShowDeletedFieldNumber = 4;
    private bool showDeleted_;
    /// <summary>
    /// Whether to include deleted sip domains in the response.
    /// Defaults to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowDeleted {
      get { return showDeleted_; }
      set {
        showDeleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSipDomainsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSipDomainsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (ShowDeleted != other.ShowDeleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (ShowDeleted != false) hash ^= ShowDeleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (ShowDeleted != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShowDeleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (ShowDeleted != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShowDeleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (ShowDeleted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSipDomainsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.ShowDeleted != false) {
        ShowDeleted = other.ShowDeleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            ShowDeleted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            ShowDeleted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListSipDomains response.
  /// </summary>
  public sealed partial class ListSipDomainsResponse : pb::IMessage<ListSipDomainsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListSipDomainsResponse> _parser = new pb::MessageParser<ListSipDomainsResponse>(() => new ListSipDomainsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSipDomainsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSipDomainsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSipDomainsResponse(ListSipDomainsResponse other) : this() {
      sipDomains_ = other.sipDomains_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSipDomainsResponse Clone() {
      return new ListSipDomainsResponse(this);
    }

    /// <summary>Field number for the "sip_domains" field.</summary>
    public const int SipDomainsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Enfonica.Voice.V1Beta1.SipDomain> _repeated_sipDomains_codec
        = pb::FieldCodec.ForMessage(10, global::Enfonica.Voice.V1Beta1.SipDomain.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.SipDomain> sipDomains_ = new pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.SipDomain>();
    /// <summary>
    /// A possibly paginated list of sip domain that are direct descendants of
    /// the specified parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.SipDomain> SipDomains {
      get { return sipDomains_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous call to `ListSipDomains`
    /// that indicates from where listing should continue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSipDomainsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSipDomainsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sipDomains_.Equals(other.sipDomains_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sipDomains_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sipDomains_.WriteTo(output, _repeated_sipDomains_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sipDomains_.WriteTo(ref output, _repeated_sipDomains_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sipDomains_.CalculateSize(_repeated_sipDomains_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSipDomainsResponse other) {
      if (other == null) {
        return;
      }
      sipDomains_.Add(other.sipDomains_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sipDomains_.AddEntriesFrom(input, _repeated_sipDomains_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sipDomains_.AddEntriesFrom(ref input, _repeated_sipDomains_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for updating a SIP domain's properties.
  /// </summary>
  public sealed partial class UpdateSipDomainRequest : pb::IMessage<UpdateSipDomainRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateSipDomainRequest> _parser = new pb::MessageParser<UpdateSipDomainRequest>(() => new UpdateSipDomainRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSipDomainRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSipDomainRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSipDomainRequest(UpdateSipDomainRequest other) : this() {
      sipDomain_ = other.sipDomain_ != null ? other.sipDomain_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSipDomainRequest Clone() {
      return new UpdateSipDomainRequest(this);
    }

    /// <summary>Field number for the "sip_domain" field.</summary>
    public const int SipDomainFieldNumber = 1;
    private global::Enfonica.Voice.V1Beta1.SipDomain sipDomain_;
    /// <summary>
    /// The new definition of the SipDomain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.SipDomain SipDomain {
      get { return sipDomain_; }
      set {
        sipDomain_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Fields to be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSipDomainRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSipDomainRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SipDomain, other.SipDomain)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sipDomain_ != null) hash ^= SipDomain.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sipDomain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SipDomain);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sipDomain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SipDomain);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sipDomain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SipDomain);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSipDomainRequest other) {
      if (other == null) {
        return;
      }
      if (other.sipDomain_ != null) {
        if (sipDomain_ == null) {
          SipDomain = new global::Enfonica.Voice.V1Beta1.SipDomain();
        }
        SipDomain.MergeFrom(other.SipDomain);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sipDomain_ == null) {
              SipDomain = new global::Enfonica.Voice.V1Beta1.SipDomain();
            }
            input.ReadMessage(SipDomain);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sipDomain_ == null) {
              SipDomain = new global::Enfonica.Voice.V1Beta1.SipDomain();
            }
            input.ReadMessage(SipDomain);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The DeleteSipDomain request message.
  /// </summary>
  public sealed partial class DeleteSipDomainRequest : pb::IMessage<DeleteSipDomainRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteSipDomainRequest> _parser = new pb::MessageParser<DeleteSipDomainRequest>(() => new DeleteSipDomainRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteSipDomainRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.SipDomainsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSipDomainRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSipDomainRequest(DeleteSipDomainRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSipDomainRequest Clone() {
      return new DeleteSipDomainRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the sip domain to be deleted.
    /// Must be of the form `projects/*/sipDomains/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteSipDomainRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteSipDomainRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteSipDomainRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
