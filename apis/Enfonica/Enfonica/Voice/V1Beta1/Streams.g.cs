// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enfonica/voice/v1beta1/streams.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Enfonica.Voice.V1Beta1 {

  /// <summary>Holder for reflection information generated from enfonica/voice/v1beta1/streams.proto</summary>
  public static partial class StreamsReflection {

    #region Descriptor
    /// <summary>File descriptor for enfonica/voice/v1beta1/streams.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StreamsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRlbmZvbmljYS92b2ljZS92MWJldGExL3N0cmVhbXMucHJvdG8SFmVuZm9u",
            "aWNhLnZvaWNlLnYxYmV0YTEaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJv",
            "dG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9h",
            "cGkvcmVzb3VyY2UucHJvdG8aF2dvb2dsZS9ycGMvc3RhdHVzLnByb3RvGhdn",
            "b29nbGUvYXBpL2NsaWVudC5wcm90byLUAQoRU3RyZWFtQ2FsbFJlcXVlc3QS",
            "MgoFc2V0dXAYASABKAsyIy5lbmZvbmljYS52b2ljZS52MWJldGExLlN0cmVh",
            "bVNldHVwEjcKC2lucHV0X2F1ZGlvGAIgASgLMiIuZW5mb25pY2Eudm9pY2Uu",
            "djFiZXRhMS5JbnB1dEF1ZGlvElIKGXVwZGF0ZV9yZXF1ZXN0X3BhcmFtZXRl",
            "cnMYAyABKAsyLy5lbmZvbmljYS52b2ljZS52MWJldGExLlVwZGF0ZVJlcXVl",
            "c3RQYXJhbWV0ZXJzInwKC1N0cmVhbVNldHVwEjIKBnN0cmVhbRgBIAEoCUIi",
            "+kEfCh12b2ljZS5hcGkuZW5mb25pY2EuY29tL1N0cmVhbRI5CgxhdWRpb19j",
            "b25maWcYAiABKAsyIy5lbmZvbmljYS52b2ljZS52MWJldGExLkF1ZGlvQ29u",
            "ZmlnIqEBChdVcGRhdGVSZXF1ZXN0UGFyYW1ldGVycxJTCgpwYXJhbWV0ZXJz",
            "GAEgAygLMj8uZW5mb25pY2Eudm9pY2UudjFiZXRhMS5VcGRhdGVSZXF1ZXN0",
            "UGFyYW1ldGVycy5QYXJhbWV0ZXJzRW50cnkaMQoPUGFyYW1ldGVyc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi/QEKElN0cmVhbUNh",
            "bGxSZXNwb25zZRJECg5jYWxsX2Nvbm5lY3RlZBgBIAEoCzIqLmVuZm9uaWNh",
            "LnZvaWNlLnYxYmV0YTEuQ2FsbENvbm5lY3RlZEV2ZW50SAASQAoMb3V0cHV0",
            "X2F1ZGlvGAIgASgLMiguZW5mb25pY2Eudm9pY2UudjFiZXRhMS5PdXRwdXRB",
            "dWRpb0V2ZW50SAASVgoYaW5wdXRfYXVkaW9fYnVmZmVyX2VtcHR5GAMgASgL",
            "MjIuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5JbnB1dEF1ZGlvQnVmZmVyRW1w",
            "dHlFdmVudEgAQgcKBWV2ZW50IkQKEkNhbGxDb25uZWN0ZWRFdmVudBIuCgRj",
            "YWxsGAEgASgJQiD6QR0KG3ZvaWNlLmFwaS5lbmZvbmljYS5jb20vQ2FsbCIh",
            "ChBPdXRwdXRBdWRpb0V2ZW50Eg0KBWF1ZGlvGAEgASgMIhwKGklucHV0QXVk",
            "aW9CdWZmZXJFbXB0eUV2ZW50Il8KCklucHV0QXVkaW8SMwoGY29uZmlnGAEg",
            "ASgLMiMuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5BdWRpb0NvbmZpZxINCgVh",
            "dWRpbxgCIAEoDBINCgVjbGVhchgDIAEoCCJsCgtBdWRpb0NvbmZpZxJCCg5h",
            "dWRpb19lbmNvZGluZxgBIAEoDjIlLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEu",
            "QXVkaW9FbmNvZGluZ0ID4EECEhkKEXNhbXBsZV9yYXRlX2hlcnR6GAIgASgF",
            "KmIKDUF1ZGlvRW5jb2RpbmcSHgoaQVVESU9fRU5DT0RJTkdfVU5TUEVDSUZJ",
            "RUQQABIYChRBVURJT19FTkNPRElOR19NVUxBVxABEhcKE0FVRElPX0VOQ09E",
            "SU5HX0FMQVcQAjK1AQoHU3RyZWFtcxJpCgpTdHJlYW1DYWxsEikuZW5mb25p",
            "Y2Eudm9pY2UudjFiZXRhMS5TdHJlYW1DYWxsUmVxdWVzdBoqLmVuZm9uaWNh",
            "LnZvaWNlLnYxYmV0YTEuU3RyZWFtQ2FsbFJlc3BvbnNlIgAoATABGj/KQRZ2",
            "b2ljZS5hcGkuZW5mb25pY2EuY29t0kEjaHR0cHM6Ly9hcGkuZW5mb25pY2Eu",
            "Y29tL2F1dGgvdm9pY2VCzQEKGmNvbS5lbmZvbmljYS52b2ljZS52MWJldGEx",
            "QgxTdHJlYW1zUHJvdG9QAVozZ2l0aHViLmNvbS9lbmZvbmljYS9lbmZvbmlj",
            "YS1nby92b2ljZS92MWJldGExO3ZvaWNl+AEBogIFRU5GT06qAhZFbmZvbmlj",
            "YS5Wb2ljZS5WMUJldGEx6kFFCh12b2ljZS5hcGkuZW5mb25pY2EuY29tL1N0",
            "cmVhbRIkcHJvamVjdHMve3Byb2plY3R9L3N0cmVhbXMve3N0cmVhbXN9YgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Enfonica.Voice.V1Beta1.AudioEncoding), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.StreamCallRequest), global::Enfonica.Voice.V1Beta1.StreamCallRequest.Parser, new[]{ "Setup", "InputAudio", "UpdateRequestParameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.StreamSetup), global::Enfonica.Voice.V1Beta1.StreamSetup.Parser, new[]{ "Stream", "AudioConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.UpdateRequestParameters), global::Enfonica.Voice.V1Beta1.UpdateRequestParameters.Parser, new[]{ "Parameters" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.StreamCallResponse), global::Enfonica.Voice.V1Beta1.StreamCallResponse.Parser, new[]{ "CallConnected", "OutputAudio", "InputAudioBufferEmpty" }, new[]{ "Event" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.CallConnectedEvent), global::Enfonica.Voice.V1Beta1.CallConnectedEvent.Parser, new[]{ "Call" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.OutputAudioEvent), global::Enfonica.Voice.V1Beta1.OutputAudioEvent.Parser, new[]{ "Audio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent), global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.InputAudio), global::Enfonica.Voice.V1Beta1.InputAudio.Parser, new[]{ "Config", "Audio", "Clear" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.AudioConfig), global::Enfonica.Voice.V1Beta1.AudioConfig.Parser, new[]{ "AudioEncoding", "SampleRateHertz" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Audio encoding of audio content.
  /// </summary>
  public enum AudioEncoding {
    /// <summary>
    /// Not specified.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
    /// Only supports 8000Hz sample rate.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_MULAW")] Mulaw = 1,
    /// <summary>
    /// 8-bit samples that compand 14-bit audio samples using G.711 PCMA/a-law.
    /// Only supports 8000Hz sample rate.
    /// </summary>
    [pbr::OriginalName("AUDIO_ENCODING_ALAW")] Alaw = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The top-level message sent by the client to the
  /// [StreamCall][enfonica.voice.v1beta1.Streams.StreamCall] method.
  ///
  /// The first message must contain
  /// [setup][enfonica.voice.v1beta1.StreamCallRequest.setup] which sets the stream
  /// resource name and the audio configuration of the stream. The stream resource name
  /// should then be supplied to the VoiceML `&lt;Stream>` action to connect a call to
  /// the stream.
  /// </summary>
  public sealed partial class StreamCallRequest : pb::IMessage<StreamCallRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamCallRequest> _parser = new pb::MessageParser<StreamCallRequest>(() => new StreamCallRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamCallRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCallRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCallRequest(StreamCallRequest other) : this() {
      setup_ = other.setup_ != null ? other.setup_.Clone() : null;
      inputAudio_ = other.inputAudio_ != null ? other.inputAudio_.Clone() : null;
      updateRequestParameters_ = other.updateRequestParameters_ != null ? other.updateRequestParameters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCallRequest Clone() {
      return new StreamCallRequest(this);
    }

    /// <summary>Field number for the "setup" field.</summary>
    public const int SetupFieldNumber = 1;
    private global::Enfonica.Voice.V1Beta1.StreamSetup setup_;
    /// <summary>
    /// The configuration of the stream. This must be specified in the first
    /// message in the request stream. It should not be specified in subsequent
    /// messages, however if it is, it will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.StreamSetup Setup {
      get { return setup_; }
      set {
        setup_ = value;
      }
    }

    /// <summary>Field number for the "input_audio" field.</summary>
    public const int InputAudioFieldNumber = 2;
    private global::Enfonica.Voice.V1Beta1.InputAudio inputAudio_;
    /// <summary>
    /// The input audio to play to the call. Input audio will be bufferred by
    /// the stream, unless [clear][enfonica.voice.v1beta1.InputAudio.clear] is true,
    /// in which case the buffer will be cleared and replaced with the specified
    /// audio. The size of the input buffer is limited to 1 minute. Audio specified
    /// beyond this limit will be truncated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.InputAudio InputAudio {
      get { return inputAudio_; }
      set {
        inputAudio_ = value;
      }
    }

    /// <summary>Field number for the "update_request_parameters" field.</summary>
    public const int UpdateRequestParametersFieldNumber = 3;
    private global::Enfonica.Voice.V1Beta1.UpdateRequestParameters updateRequestParameters_;
    /// <summary>
    /// Updates the request parameters of the subsequent VoiceML request once this
    /// stream has completed. This allows you to pass values to your VoiceML handler.
    /// Parameters specified in this message will be merged with any previous
    /// parameters that were specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.UpdateRequestParameters UpdateRequestParameters {
      get { return updateRequestParameters_; }
      set {
        updateRequestParameters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamCallRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamCallRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Setup, other.Setup)) return false;
      if (!object.Equals(InputAudio, other.InputAudio)) return false;
      if (!object.Equals(UpdateRequestParameters, other.UpdateRequestParameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (setup_ != null) hash ^= Setup.GetHashCode();
      if (inputAudio_ != null) hash ^= InputAudio.GetHashCode();
      if (updateRequestParameters_ != null) hash ^= UpdateRequestParameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (setup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Setup);
      }
      if (inputAudio_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InputAudio);
      }
      if (updateRequestParameters_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateRequestParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (setup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Setup);
      }
      if (inputAudio_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InputAudio);
      }
      if (updateRequestParameters_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateRequestParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (setup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Setup);
      }
      if (inputAudio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputAudio);
      }
      if (updateRequestParameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRequestParameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamCallRequest other) {
      if (other == null) {
        return;
      }
      if (other.setup_ != null) {
        if (setup_ == null) {
          Setup = new global::Enfonica.Voice.V1Beta1.StreamSetup();
        }
        Setup.MergeFrom(other.Setup);
      }
      if (other.inputAudio_ != null) {
        if (inputAudio_ == null) {
          InputAudio = new global::Enfonica.Voice.V1Beta1.InputAudio();
        }
        InputAudio.MergeFrom(other.InputAudio);
      }
      if (other.updateRequestParameters_ != null) {
        if (updateRequestParameters_ == null) {
          UpdateRequestParameters = new global::Enfonica.Voice.V1Beta1.UpdateRequestParameters();
        }
        UpdateRequestParameters.MergeFrom(other.UpdateRequestParameters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (setup_ == null) {
              Setup = new global::Enfonica.Voice.V1Beta1.StreamSetup();
            }
            input.ReadMessage(Setup);
            break;
          }
          case 18: {
            if (inputAudio_ == null) {
              InputAudio = new global::Enfonica.Voice.V1Beta1.InputAudio();
            }
            input.ReadMessage(InputAudio);
            break;
          }
          case 26: {
            if (updateRequestParameters_ == null) {
              UpdateRequestParameters = new global::Enfonica.Voice.V1Beta1.UpdateRequestParameters();
            }
            input.ReadMessage(UpdateRequestParameters);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (setup_ == null) {
              Setup = new global::Enfonica.Voice.V1Beta1.StreamSetup();
            }
            input.ReadMessage(Setup);
            break;
          }
          case 18: {
            if (inputAudio_ == null) {
              InputAudio = new global::Enfonica.Voice.V1Beta1.InputAudio();
            }
            input.ReadMessage(InputAudio);
            break;
          }
          case 26: {
            if (updateRequestParameters_ == null) {
              UpdateRequestParameters = new global::Enfonica.Voice.V1Beta1.UpdateRequestParameters();
            }
            input.ReadMessage(UpdateRequestParameters);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Setup message to configure the stream.
  /// </summary>
  public sealed partial class StreamSetup : pb::IMessage<StreamSetup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamSetup> _parser = new pb::MessageParser<StreamSetup>(() => new StreamSetup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamSetup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamSetup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamSetup(StreamSetup other) : this() {
      stream_ = other.stream_;
      audioConfig_ = other.audioConfig_ != null ? other.audioConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamSetup Clone() {
      return new StreamSetup(this);
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 1;
    private string stream_ = "";
    /// <summary>
    /// The name of the stream.
    /// Format: `projects/&lt;Project ID>/streams/&lt;Stream ID>`.
    /// It's up to the API caller to choose an appropriate `Stream ID`. It must
    /// be unique and the length of `Stream ID` must not exceed 36 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stream {
      get { return stream_; }
      set {
        stream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audio_config" field.</summary>
    public const int AudioConfigFieldNumber = 2;
    private global::Enfonica.Voice.V1Beta1.AudioConfig audioConfig_;
    /// <summary>
    /// The audio configuration of the stream. This will be used for both input
    /// and output audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.AudioConfig AudioConfig {
      get { return audioConfig_; }
      set {
        audioConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamSetup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamSetup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Stream != other.Stream) return false;
      if (!object.Equals(AudioConfig, other.AudioConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Stream.Length != 0) hash ^= Stream.GetHashCode();
      if (audioConfig_ != null) hash ^= AudioConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Stream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Stream);
      }
      if (audioConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Stream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Stream);
      }
      if (audioConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Stream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stream);
      }
      if (audioConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamSetup other) {
      if (other == null) {
        return;
      }
      if (other.Stream.Length != 0) {
        Stream = other.Stream;
      }
      if (other.audioConfig_ != null) {
        if (audioConfig_ == null) {
          AudioConfig = new global::Enfonica.Voice.V1Beta1.AudioConfig();
        }
        AudioConfig.MergeFrom(other.AudioConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Stream = input.ReadString();
            break;
          }
          case 18: {
            if (audioConfig_ == null) {
              AudioConfig = new global::Enfonica.Voice.V1Beta1.AudioConfig();
            }
            input.ReadMessage(AudioConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Stream = input.ReadString();
            break;
          }
          case 18: {
            if (audioConfig_ == null) {
              AudioConfig = new global::Enfonica.Voice.V1Beta1.AudioConfig();
            }
            input.ReadMessage(AudioConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message to update the request parameters in the subsequent VoiceML request
  /// once the stream has completed.
  /// </summary>
  public sealed partial class UpdateRequestParameters : pb::IMessage<UpdateRequestParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateRequestParameters> _parser = new pb::MessageParser<UpdateRequestParameters>(() => new UpdateRequestParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequestParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequestParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequestParameters(UpdateRequestParameters other) : this() {
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequestParameters Clone() {
      return new UpdateRequestParameters(this);
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_parameters_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> parameters_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The request parameters to merge.
    /// The maximum aggregate size of all persisted keys and values is 50 KiB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequestParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequestParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Parameters.Equals(other.Parameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      parameters_.WriteTo(output, _map_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      parameters_.WriteTo(ref output, _map_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parameters_.CalculateSize(_map_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequestParameters other) {
      if (other == null) {
        return;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parameters_.AddEntriesFrom(input, _map_parameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            parameters_.AddEntriesFrom(ref input, _map_parameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message returned from the
  /// [StreamCall][enfonica.voice.v1beta1.Streams.StreamCall] method.
  ///
  /// Multiple response messages can be returned. The first response message
  /// will always have [call_connected][enfonica.voice.v1beta1.StreamCallResponse.call_connected]
  /// set, indicating that the stream has been connected to a call.
  ///
  /// If the call is disconnected, the response stream will be closed.
  /// </summary>
  public sealed partial class StreamCallResponse : pb::IMessage<StreamCallResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamCallResponse> _parser = new pb::MessageParser<StreamCallResponse>(() => new StreamCallResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamCallResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCallResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCallResponse(StreamCallResponse other) : this() {
      switch (other.EventCase) {
        case EventOneofCase.CallConnected:
          CallConnected = other.CallConnected.Clone();
          break;
        case EventOneofCase.OutputAudio:
          OutputAudio = other.OutputAudio.Clone();
          break;
        case EventOneofCase.InputAudioBufferEmpty:
          InputAudioBufferEmpty = other.InputAudioBufferEmpty.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCallResponse Clone() {
      return new StreamCallResponse(this);
    }

    /// <summary>Field number for the "call_connected" field.</summary>
    public const int CallConnectedFieldNumber = 1;
    /// <summary>
    /// If set, the call has been connected to the stream.
    /// This will always be the first event in the response stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.CallConnectedEvent CallConnected {
      get { return eventCase_ == EventOneofCase.CallConnected ? (global::Enfonica.Voice.V1Beta1.CallConnectedEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.CallConnected;
      }
    }

    /// <summary>Field number for the "output_audio" field.</summary>
    public const int OutputAudioFieldNumber = 2;
    /// <summary>
    /// The audio received from the call. The stream will buffer the audio
    /// and send it in chunks. There is no specific size defined for each
    /// chunk, but it should be roughly in the range of 1000 to 2000 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.OutputAudioEvent OutputAudio {
      get { return eventCase_ == EventOneofCase.OutputAudio ? (global::Enfonica.Voice.V1Beta1.OutputAudioEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.OutputAudio;
      }
    }

    /// <summary>Field number for the "input_audio_buffer_empty" field.</summary>
    public const int InputAudioBufferEmptyFieldNumber = 3;
    /// <summary>
    /// Indicates that the input audio specified to be played to the call
    /// has completed and the stream's buffer is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent InputAudioBufferEmpty {
      get { return eventCase_ == EventOneofCase.InputAudioBufferEmpty ? (global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.InputAudioBufferEmpty;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      CallConnected = 1,
      OutputAudio = 2,
      InputAudioBufferEmpty = 3,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamCallResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamCallResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CallConnected, other.CallConnected)) return false;
      if (!object.Equals(OutputAudio, other.OutputAudio)) return false;
      if (!object.Equals(InputAudioBufferEmpty, other.InputAudioBufferEmpty)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventCase_ == EventOneofCase.CallConnected) hash ^= CallConnected.GetHashCode();
      if (eventCase_ == EventOneofCase.OutputAudio) hash ^= OutputAudio.GetHashCode();
      if (eventCase_ == EventOneofCase.InputAudioBufferEmpty) hash ^= InputAudioBufferEmpty.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventCase_ == EventOneofCase.CallConnected) {
        output.WriteRawTag(10);
        output.WriteMessage(CallConnected);
      }
      if (eventCase_ == EventOneofCase.OutputAudio) {
        output.WriteRawTag(18);
        output.WriteMessage(OutputAudio);
      }
      if (eventCase_ == EventOneofCase.InputAudioBufferEmpty) {
        output.WriteRawTag(26);
        output.WriteMessage(InputAudioBufferEmpty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventCase_ == EventOneofCase.CallConnected) {
        output.WriteRawTag(10);
        output.WriteMessage(CallConnected);
      }
      if (eventCase_ == EventOneofCase.OutputAudio) {
        output.WriteRawTag(18);
        output.WriteMessage(OutputAudio);
      }
      if (eventCase_ == EventOneofCase.InputAudioBufferEmpty) {
        output.WriteRawTag(26);
        output.WriteMessage(InputAudioBufferEmpty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventCase_ == EventOneofCase.CallConnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallConnected);
      }
      if (eventCase_ == EventOneofCase.OutputAudio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputAudio);
      }
      if (eventCase_ == EventOneofCase.InputAudioBufferEmpty) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputAudioBufferEmpty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamCallResponse other) {
      if (other == null) {
        return;
      }
      switch (other.EventCase) {
        case EventOneofCase.CallConnected:
          if (CallConnected == null) {
            CallConnected = new global::Enfonica.Voice.V1Beta1.CallConnectedEvent();
          }
          CallConnected.MergeFrom(other.CallConnected);
          break;
        case EventOneofCase.OutputAudio:
          if (OutputAudio == null) {
            OutputAudio = new global::Enfonica.Voice.V1Beta1.OutputAudioEvent();
          }
          OutputAudio.MergeFrom(other.OutputAudio);
          break;
        case EventOneofCase.InputAudioBufferEmpty:
          if (InputAudioBufferEmpty == null) {
            InputAudioBufferEmpty = new global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent();
          }
          InputAudioBufferEmpty.MergeFrom(other.InputAudioBufferEmpty);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Enfonica.Voice.V1Beta1.CallConnectedEvent subBuilder = new global::Enfonica.Voice.V1Beta1.CallConnectedEvent();
            if (eventCase_ == EventOneofCase.CallConnected) {
              subBuilder.MergeFrom(CallConnected);
            }
            input.ReadMessage(subBuilder);
            CallConnected = subBuilder;
            break;
          }
          case 18: {
            global::Enfonica.Voice.V1Beta1.OutputAudioEvent subBuilder = new global::Enfonica.Voice.V1Beta1.OutputAudioEvent();
            if (eventCase_ == EventOneofCase.OutputAudio) {
              subBuilder.MergeFrom(OutputAudio);
            }
            input.ReadMessage(subBuilder);
            OutputAudio = subBuilder;
            break;
          }
          case 26: {
            global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent subBuilder = new global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent();
            if (eventCase_ == EventOneofCase.InputAudioBufferEmpty) {
              subBuilder.MergeFrom(InputAudioBufferEmpty);
            }
            input.ReadMessage(subBuilder);
            InputAudioBufferEmpty = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Enfonica.Voice.V1Beta1.CallConnectedEvent subBuilder = new global::Enfonica.Voice.V1Beta1.CallConnectedEvent();
            if (eventCase_ == EventOneofCase.CallConnected) {
              subBuilder.MergeFrom(CallConnected);
            }
            input.ReadMessage(subBuilder);
            CallConnected = subBuilder;
            break;
          }
          case 18: {
            global::Enfonica.Voice.V1Beta1.OutputAudioEvent subBuilder = new global::Enfonica.Voice.V1Beta1.OutputAudioEvent();
            if (eventCase_ == EventOneofCase.OutputAudio) {
              subBuilder.MergeFrom(OutputAudio);
            }
            input.ReadMessage(subBuilder);
            OutputAudio = subBuilder;
            break;
          }
          case 26: {
            global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent subBuilder = new global::Enfonica.Voice.V1Beta1.InputAudioBufferEmptyEvent();
            if (eventCase_ == EventOneofCase.InputAudioBufferEmpty) {
              subBuilder.MergeFrom(InputAudioBufferEmpty);
            }
            input.ReadMessage(subBuilder);
            InputAudioBufferEmpty = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Event indicating a call has been connected to the stream.
  /// </summary>
  public sealed partial class CallConnectedEvent : pb::IMessage<CallConnectedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallConnectedEvent> _parser = new pb::MessageParser<CallConnectedEvent>(() => new CallConnectedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallConnectedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConnectedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConnectedEvent(CallConnectedEvent other) : this() {
      call_ = other.call_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConnectedEvent Clone() {
      return new CallConnectedEvent(this);
    }

    /// <summary>Field number for the "call" field.</summary>
    public const int CallFieldNumber = 1;
    private string call_ = "";
    /// <summary>
    /// The resource name of the call that has been connected to the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Call {
      get { return call_; }
      set {
        call_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallConnectedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallConnectedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Call != other.Call) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Call.Length != 0) hash ^= Call.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Call.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Call);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Call.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Call);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Call.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Call);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallConnectedEvent other) {
      if (other == null) {
        return;
      }
      if (other.Call.Length != 0) {
        Call = other.Call;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Call = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Call = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Event containing audio from the stream.
  /// </summary>
  public sealed partial class OutputAudioEvent : pb::IMessage<OutputAudioEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutputAudioEvent> _parser = new pb::MessageParser<OutputAudioEvent>(() => new OutputAudioEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputAudioEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputAudioEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputAudioEvent(OutputAudioEvent other) : this() {
      audio_ = other.audio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputAudioEvent Clone() {
      return new OutputAudioEvent(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private pb::ByteString audio_ = pb::ByteString.Empty;
    /// <summary>
    /// The audio content encoded as per the audio configuration requested during the
    /// initial stream setup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Audio {
      get { return audio_; }
      set {
        audio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputAudioEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputAudioEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Audio != other.Audio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Audio.Length != 0) hash ^= Audio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Audio.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Audio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Audio.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Audio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Audio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Audio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputAudioEvent other) {
      if (other == null) {
        return;
      }
      if (other.Audio.Length != 0) {
        Audio = other.Audio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Audio = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Audio = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Event indicating that the input audio has completed playing to the call.
  /// </summary>
  public sealed partial class InputAudioBufferEmptyEvent : pb::IMessage<InputAudioBufferEmptyEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputAudioBufferEmptyEvent> _parser = new pb::MessageParser<InputAudioBufferEmptyEvent>(() => new InputAudioBufferEmptyEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputAudioBufferEmptyEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudioBufferEmptyEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudioBufferEmptyEvent(InputAudioBufferEmptyEvent other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudioBufferEmptyEvent Clone() {
      return new InputAudioBufferEmptyEvent(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputAudioBufferEmptyEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputAudioBufferEmptyEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputAudioBufferEmptyEvent other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents audio content supplied by the API caller and played to the call.
  /// </summary>
  public sealed partial class InputAudio : pb::IMessage<InputAudio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputAudio> _parser = new pb::MessageParser<InputAudio>(() => new InputAudio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudio(InputAudio other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      audio_ = other.audio_;
      clear_ = other.clear_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputAudio Clone() {
      return new InputAudio(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::Enfonica.Voice.V1Beta1.AudioConfig config_;
    /// <summary>
    /// The configuration of the audio content.
    /// * If config is omitted, the audio configuration from the initial stream setup
    ///   will be used.
    /// * If config is specified, it will be used, and if different to the audio
    ///   configuration from the initial stream setup, the audio content will be transcoded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.AudioConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 2;
    private pb::ByteString audio_ = pb::ByteString.Empty;
    /// <summary>
    /// The audio content encoded as per the audio configuration. The maximum length of
    /// audio specified in one message is 960,000 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Audio {
      get { return audio_; }
      set {
        audio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clear" field.</summary>
    public const int ClearFieldNumber = 3;
    private bool clear_;
    /// <summary>
    /// If true, clears all previously bufferred audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Clear {
      get { return clear_; }
      set {
        clear_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (Audio != other.Audio) return false;
      if (Clear != other.Clear) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (Audio.Length != 0) hash ^= Audio.GetHashCode();
      if (Clear != false) hash ^= Clear.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (Audio.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Audio);
      }
      if (Clear != false) {
        output.WriteRawTag(24);
        output.WriteBool(Clear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (Audio.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Audio);
      }
      if (Clear != false) {
        output.WriteRawTag(24);
        output.WriteBool(Clear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (Audio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Audio);
      }
      if (Clear != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputAudio other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Enfonica.Voice.V1Beta1.AudioConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.Audio.Length != 0) {
        Audio = other.Audio;
      }
      if (other.Clear != false) {
        Clear = other.Clear;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Enfonica.Voice.V1Beta1.AudioConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            Audio = input.ReadBytes();
            break;
          }
          case 24: {
            Clear = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Enfonica.Voice.V1Beta1.AudioConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            Audio = input.ReadBytes();
            break;
          }
          case 24: {
            Clear = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Description of the format of audio content.
  /// </summary>
  public sealed partial class AudioConfig : pb::IMessage<AudioConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioConfig> _parser = new pb::MessageParser<AudioConfig>(() => new AudioConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.StreamsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig(AudioConfig other) : this() {
      audioEncoding_ = other.audioEncoding_;
      sampleRateHertz_ = other.sampleRateHertz_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig Clone() {
      return new AudioConfig(this);
    }

    /// <summary>Field number for the "audio_encoding" field.</summary>
    public const int AudioEncodingFieldNumber = 1;
    private global::Enfonica.Voice.V1Beta1.AudioEncoding audioEncoding_ = global::Enfonica.Voice.V1Beta1.AudioEncoding.Unspecified;
    /// <summary>
    /// Required. Audio encoding of the audio content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.AudioEncoding AudioEncoding {
      get { return audioEncoding_; }
      set {
        audioEncoding_ = value;
      }
    }

    /// <summary>Field number for the "sample_rate_hertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 2;
    private int sampleRateHertz_;
    /// <summary>
    /// Sample rate (in Hertz) of the audio content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AudioEncoding != other.AudioEncoding) return false;
      if (SampleRateHertz != other.SampleRateHertz) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEncoding != global::Enfonica.Voice.V1Beta1.AudioEncoding.Unspecified) hash ^= AudioEncoding.GetHashCode();
      if (SampleRateHertz != 0) hash ^= SampleRateHertz.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AudioEncoding != global::Enfonica.Voice.V1Beta1.AudioEncoding.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AudioEncoding);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SampleRateHertz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AudioEncoding != global::Enfonica.Voice.V1Beta1.AudioEncoding.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AudioEncoding);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SampleRateHertz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AudioEncoding != global::Enfonica.Voice.V1Beta1.AudioEncoding.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioEncoding);
      }
      if (SampleRateHertz != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRateHertz);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioConfig other) {
      if (other == null) {
        return;
      }
      if (other.AudioEncoding != global::Enfonica.Voice.V1Beta1.AudioEncoding.Unspecified) {
        AudioEncoding = other.AudioEncoding;
      }
      if (other.SampleRateHertz != 0) {
        SampleRateHertz = other.SampleRateHertz;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AudioEncoding = (global::Enfonica.Voice.V1Beta1.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AudioEncoding = (global::Enfonica.Voice.V1Beta1.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
