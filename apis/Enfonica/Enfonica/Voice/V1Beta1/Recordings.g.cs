// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: enfonica/voice/v1beta1/recordings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Enfonica.Voice.V1Beta1 {

  /// <summary>Holder for reflection information generated from enfonica/voice/v1beta1/recordings.proto</summary>
  public static partial class RecordingsReflection {

    #region Descriptor
    /// <summary>File descriptor for enfonica/voice/v1beta1/recordings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RecordingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidlbmZvbmljYS92b2ljZS92MWJldGExL3JlY29yZGluZ3MucHJvdG8SFmVu",
            "Zm9uaWNhLnZvaWNlLnYxYmV0YTEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxocZ29v",
            "Z2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJj",
            "ZS5wcm90bxofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoXZ29v",
            "Z2xlL2FwaS9jbGllbnQucHJvdG8iswcKCVJlY29yZGluZxIMCgRuYW1lGAEg",
            "ASgJEjsKBXN0YXRlGAMgASgOMicuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5S",
            "ZWNvcmRpbmcuU3RhdGVCA+BBAxI4CgZzb3VyY2UYBCABKA4yKC5lbmZvbmlj",
            "YS52b2ljZS52MWJldGExLlJlY29yZGluZy5Tb3VyY2USMAoIZHVyYXRpb24Y",
            "BSABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CA+BBAxIaCg1jaGFu",
            "bmVsX2NvdW50GAYgASgFQgPgQQMSSQoPcG9zdF9wcm9jZXNzaW5nGAcgAygO",
            "MjAuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5SZWNvcmRpbmcuUG9zdFByb2Nl",
            "c3NpbmcSRAoKZXJyb3JfY29kZRgIIAEoDjIrLmVuZm9uaWNhLnZvaWNlLnYx",
            "YmV0YTEuUmVjb3JkaW5nLkVycm9yQ29kZUID4EEDEjoKBWF1ZGlvGAkgAygL",
            "MiYuZW5mb25pY2Eudm9pY2UudjFiZXRhMS5SZWNvcmRpbmdBdWRpb0ID4EED",
            "EjMKCnN0YXJ0X3RpbWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wQgPgQQMSNAoLY3JlYXRlX3RpbWUYCyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQgPgQQMSEQoJcmVhZHlfdXJpGAwgASgJIkcKBlNvdXJj",
            "ZRIWChJTT1VSQ0VfVU5TUEVDSUZJRUQQABIRCg1SRUNPUkRfQUNUSU9OEAES",
            "EgoOQ0FMTF9SRUNPUkRJTkcQAiJRCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJ",
            "RklFRBAAEgsKB1BFTkRJTkcQARINCglTVUNDRUVERUQQAhIJCgVFTVBUWRAD",
            "EgoKBkZBSUxFRBAEIkMKDlBvc3RQcm9jZXNzaW5nEh8KG1BPU1RfUFJPQ0VT",
            "U0lOR19VTlNQRUNJRklFRBAAEhAKDFRSSU1fU0lMRU5DRRABIkgKCUVycm9y",
            "Q29kZRIaChZFUlJPUl9DT0RFX1VOU1BFQ0lGSUVEEAASCwoHVElNRU9VVBAB",
            "EhIKDklOVEVSTkFMX0VSUk9SEAI6XepBWgogdm9pY2UuYXBpLmVuZm9uaWNh",
            "LmNvbS9SZWNvcmRpbmcSNnByb2plY3RzL3twcm9qZWN0fS9jYWxscy97Y2Fs",
            "bH0vcmVjb3JkaW5ncy97cmVjb3JkaW5nfSKIAgoOUmVjb3JkaW5nQXVkaW8S",
            "EQoJbWltZV90eXBlGAEgASgJEkYKCGVuY29kaW5nGAIgASgOMjQuZW5mb25p",
            "Y2Eudm9pY2UudjFiZXRhMS5SZWNvcmRpbmdBdWRpby5BdWRpb0VuY29kaW5n",
            "EhMKC3NhbXBsZV9yYXRlGAMgASgFEhIKCnNpemVfYnl0ZXMYBCABKAUSCwoD",
            "dXJpGAUgASgJImUKDUF1ZGlvRW5jb2RpbmcSHgoaQVVESU9fRU5DT0RJTkdf",
            "VU5TUEVDSUZJRUQQABIcChhBVURJT19FTkNPRElOR19QQ01fMTZCSVQQARIW",
            "ChJBVURJT19FTkNPRElOR19NUDMQAiKCAQoTR2V0UmVjb3JkaW5nUmVxdWVz",
            "dBI2CgRuYW1lGAEgASgJQijgQQL6QSIKIHZvaWNlLmFwaS5lbmZvbmljYS5j",
            "b20vUmVjb3JkaW5nEjMKBHZpZXcYAiABKA4yJS5lbmZvbmljYS52b2ljZS52",
            "MWJldGExLlJlY29yZGluZ1ZpZXcirQEKFUxpc3RSZWNvcmRpbmdzUmVxdWVz",
            "dBI4CgZwYXJlbnQYASABKAlCKOBBAvpBIhIgdm9pY2UuYXBpLmVuZm9uaWNh",
            "LmNvbS9SZWNvcmRpbmcSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9r",
            "ZW4YAyABKAkSMwoEdmlldxgEIAEoDjIlLmVuZm9uaWNhLnZvaWNlLnYxYmV0",
            "YTEuUmVjb3JkaW5nVmlldyJoChZMaXN0UmVjb3JkaW5nc1Jlc3BvbnNlEjUK",
            "CnJlY29yZGluZ3MYASADKAsyIS5lbmZvbmljYS52b2ljZS52MWJldGExLlJl",
            "Y29yZGluZxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiUAoWRGVsZXRlUmVj",
            "b3JkaW5nUmVxdWVzdBI2CgRuYW1lGAEgASgJQijgQQL6QSIKIHZvaWNlLmFw",
            "aS5lbmZvbmljYS5jb20vUmVjb3JkaW5nKkQKDVJlY29yZGluZ1ZpZXcSHgoa",
            "UkVDT1JESU5HX1ZJRVdfVU5TUEVDSUZJRUQQABIJCgVCQVNJQxABEggKBEZV",
            "TEwQAjL0BAoKUmVjb3JkaW5ncxKeAQoMR2V0UmVjb3JkaW5nEisuZW5mb25p",
            "Y2Eudm9pY2UudjFiZXRhMS5HZXRSZWNvcmRpbmdSZXF1ZXN0GiEuZW5mb25p",
            "Y2Eudm9pY2UudjFiZXRhMS5SZWNvcmRpbmciPoLT5JMCMRIvL3YxYmV0YTEv",
            "e25hbWU9cHJvamVjdHMvKi9jYWxscy8qL3JlY29yZGluZ3MvKn3aQQRuYW1l",
            "EtwBCg5MaXN0UmVjb3JkaW5ncxItLmVuZm9uaWNhLnZvaWNlLnYxYmV0YTEu",
            "TGlzdFJlY29yZGluZ3NSZXF1ZXN0Gi4uZW5mb25pY2Eudm9pY2UudjFiZXRh",
            "MS5MaXN0UmVjb3JkaW5nc1Jlc3BvbnNlImuC0+STAlwSLy92MWJldGExL3tw",
            "YXJlbnQ9cHJvamVjdHMvKi9jYWxscy8qfS9yZWNvcmRpbmdzWikSJy92MWJl",
            "dGExL3twYXJlbnQ9cHJvamVjdHMvKn0vcmVjb3JkaW5nc9pBBnBhcmVudBKk",
            "AQoPRGVsZXRlUmVjb3JkaW5nEi4uZW5mb25pY2Eudm9pY2UudjFiZXRhMS5E",
            "ZWxldGVSZWNvcmRpbmdSZXF1ZXN0GiEuZW5mb25pY2Eudm9pY2UudjFiZXRh",
            "MS5SZWNvcmRpbmciPoLT5JMCMSovL3YxYmV0YTEve25hbWU9cHJvamVjdHMv",
            "Ki9jYWxscy8qL3JlY29yZGluZ3MvKn3aQQRuYW1lGj/KQRZ2b2ljZS5hcGku",
            "ZW5mb25pY2EuY29t0kEjaHR0cHM6Ly9hcGkuZW5mb25pY2EuY29tL2F1dGgv",
            "dm9pY2VCiAEKGmNvbS5lbmZvbmljYS52b2ljZS52MWJldGExQg9SZWNvcmRp",
            "bmdzUHJvdG9QAVozZ2l0aHViLmNvbS9lbmZvbmljYS9lbmZvbmljYS1nby92",
            "b2ljZS92MWJldGExO3ZvaWNl+AEBogIFRU5GT06qAhZFbmZvbmljYS5Wb2lj",
            "ZS5WMUJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Enfonica.Voice.V1Beta1.RecordingView), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.Recording), global::Enfonica.Voice.V1Beta1.Recording.Parser, new[]{ "Name", "State", "Source", "Duration", "ChannelCount", "PostProcessing", "ErrorCode", "Audio", "StartTime", "CreateTime", "ReadyUri" }, null, new[]{ typeof(global::Enfonica.Voice.V1Beta1.Recording.Types.Source), typeof(global::Enfonica.Voice.V1Beta1.Recording.Types.State), typeof(global::Enfonica.Voice.V1Beta1.Recording.Types.PostProcessing), typeof(global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.RecordingAudio), global::Enfonica.Voice.V1Beta1.RecordingAudio.Parser, new[]{ "MimeType", "Encoding", "SampleRate", "SizeBytes", "Uri" }, null, new[]{ typeof(global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.GetRecordingRequest), global::Enfonica.Voice.V1Beta1.GetRecordingRequest.Parser, new[]{ "Name", "View" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.ListRecordingsRequest), global::Enfonica.Voice.V1Beta1.ListRecordingsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "View" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.ListRecordingsResponse), global::Enfonica.Voice.V1Beta1.ListRecordingsResponse.Parser, new[]{ "Recordings", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Enfonica.Voice.V1Beta1.DeleteRecordingRequest), global::Enfonica.Voice.V1Beta1.DeleteRecordingRequest.Parser, new[]{ "Name" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Configuration of partial responses for the Recording resource.
  /// </summary>
  public enum RecordingView {
    /// <summary>
    /// The default / unset value.
    /// The API will default to BASIC for ListRecordings and FULL for GetRecording.
    /// </summary>
    [pbr::OriginalName("RECORDING_VIEW_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Includes all fields except [RecordingAudio.uri][enfonica.voice.v1beta1.RecordingAudio.uri].
    /// This is the default for ListRecordings.
    /// </summary>
    [pbr::OriginalName("BASIC")] Basic = 1,
    /// <summary>
    /// Includes all fields.
    /// This is the default for GetRecording.
    /// </summary>
    [pbr::OriginalName("FULL")] Full = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The Recording resource. This represents a recording, which can either be a
  /// recording of a small section of the call (eg recorded using the &lt;Record> action),
  /// or a recording of an entire call.
  /// </summary>
  public sealed partial class Recording : pb::IMessage<Recording>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Recording> _parser = new pb::MessageParser<Recording>(() => new Recording());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Recording> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.RecordingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recording() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recording(Recording other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      source_ = other.source_;
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      channelCount_ = other.channelCount_;
      postProcessing_ = other.postProcessing_.Clone();
      errorCode_ = other.errorCode_;
      audio_ = other.audio_.Clone();
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      readyUri_ = other.readyUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recording Clone() {
      return new Recording(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the recording. It must match the pattern `projects/*/calls/*/recordings/*`.
    /// The call will always refer to the parent leg of a two-leg call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Enfonica.Voice.V1Beta1.Recording.Types.State state_ = global::Enfonica.Voice.V1Beta1.Recording.Types.State.Unspecified;
    /// <summary>
    /// The state of the recording.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Recording.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 4;
    private global::Enfonica.Voice.V1Beta1.Recording.Types.Source source_ = global::Enfonica.Voice.V1Beta1.Recording.Types.Source.Unspecified;
    /// <summary>
    /// The source of the recording. This lets you know what triggered the recording to begin.
    /// This cannot be set by users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Recording.Types.Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration duration_;
    /// <summary>
    /// The duration of the recording, after any post processing.
    /// This is only set when the state is SUCCEEDED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "channel_count" field.</summary>
    public const int ChannelCountFieldNumber = 6;
    private int channelCount_;
    /// <summary>
    /// The number of channels that have been recorded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChannelCount {
      get { return channelCount_; }
      set {
        channelCount_ = value;
      }
    }

    /// <summary>Field number for the "post_processing" field.</summary>
    public const int PostProcessingFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Enfonica.Voice.V1Beta1.Recording.Types.PostProcessing> _repeated_postProcessing_codec
        = pb::FieldCodec.ForEnum(58, x => (int) x, x => (global::Enfonica.Voice.V1Beta1.Recording.Types.PostProcessing) x);
    private readonly pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Recording.Types.PostProcessing> postProcessing_ = new pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Recording.Types.PostProcessing>();
    /// <summary>
    /// The post processing that should be applied to the recording.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Recording.Types.PostProcessing> PostProcessing {
      get { return postProcessing_; }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 8;
    private global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode errorCode_ = global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode.Unspecified;
    /// <summary>
    /// When state is FAILED, an error code describing the type of error that occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Enfonica.Voice.V1Beta1.RecordingAudio> _repeated_audio_codec
        = pb::FieldCodec.ForMessage(74, global::Enfonica.Voice.V1Beta1.RecordingAudio.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.RecordingAudio> audio_ = new pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.RecordingAudio>();
    /// <summary>
    /// The audio that was recorded in various formats and encodings. For non-empty, successful
    /// recordings, there should always be an `audio/x-wav` and `audio/mpeg` recording.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.RecordingAudio> Audio {
      get { return audio_; }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The start time of the recording. This is when recording on the call started. Only
    /// set when state is SUCCEEDED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The creation time of the recording. This is the time that the recording resource
    /// was created. This is usually immediately before `start_time`, but can be afterwards
    /// if processing was delayed.
    /// Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "ready_uri" field.</summary>
    public const int ReadyUriFieldNumber = 12;
    private string readyUri_ = "";
    /// <summary>
    /// The URI to send the recording ready webhook to when the state transitions to a terminal
    /// state (SUCCEEDED, EMPTY, FAILED). Must be an absolute URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReadyUri {
      get { return readyUri_; }
      set {
        readyUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Recording);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Recording other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (Source != other.Source) return false;
      if (!object.Equals(Duration, other.Duration)) return false;
      if (ChannelCount != other.ChannelCount) return false;
      if(!postProcessing_.Equals(other.postProcessing_)) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if(!audio_.Equals(other.audio_)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (ReadyUri != other.ReadyUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Enfonica.Voice.V1Beta1.Recording.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Source != global::Enfonica.Voice.V1Beta1.Recording.Types.Source.Unspecified) hash ^= Source.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (ChannelCount != 0) hash ^= ChannelCount.GetHashCode();
      hash ^= postProcessing_.GetHashCode();
      if (ErrorCode != global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode.Unspecified) hash ^= ErrorCode.GetHashCode();
      hash ^= audio_.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (ReadyUri.Length != 0) hash ^= ReadyUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Enfonica.Voice.V1Beta1.Recording.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Source != global::Enfonica.Voice.V1Beta1.Recording.Types.Source.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Source);
      }
      if (duration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Duration);
      }
      if (ChannelCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChannelCount);
      }
      postProcessing_.WriteTo(output, _repeated_postProcessing_codec);
      if (ErrorCode != global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ErrorCode);
      }
      audio_.WriteTo(output, _repeated_audio_codec);
      if (startTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (ReadyUri.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ReadyUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Enfonica.Voice.V1Beta1.Recording.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Source != global::Enfonica.Voice.V1Beta1.Recording.Types.Source.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Source);
      }
      if (duration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Duration);
      }
      if (ChannelCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChannelCount);
      }
      postProcessing_.WriteTo(ref output, _repeated_postProcessing_codec);
      if (ErrorCode != global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ErrorCode);
      }
      audio_.WriteTo(ref output, _repeated_audio_codec);
      if (startTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (ReadyUri.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ReadyUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Enfonica.Voice.V1Beta1.Recording.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Source != global::Enfonica.Voice.V1Beta1.Recording.Types.Source.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (ChannelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelCount);
      }
      size += postProcessing_.CalculateSize(_repeated_postProcessing_codec);
      if (ErrorCode != global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      size += audio_.CalculateSize(_repeated_audio_codec);
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (ReadyUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReadyUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Recording other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Enfonica.Voice.V1Beta1.Recording.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Source != global::Enfonica.Voice.V1Beta1.Recording.Types.Source.Unspecified) {
        Source = other.Source;
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      if (other.ChannelCount != 0) {
        ChannelCount = other.ChannelCount;
      }
      postProcessing_.Add(other.postProcessing_);
      if (other.ErrorCode != global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode.Unspecified) {
        ErrorCode = other.ErrorCode;
      }
      audio_.Add(other.audio_);
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.ReadyUri.Length != 0) {
        ReadyUri = other.ReadyUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            State = (global::Enfonica.Voice.V1Beta1.Recording.Types.State) input.ReadEnum();
            break;
          }
          case 32: {
            Source = (global::Enfonica.Voice.V1Beta1.Recording.Types.Source) input.ReadEnum();
            break;
          }
          case 42: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 48: {
            ChannelCount = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            postProcessing_.AddEntriesFrom(input, _repeated_postProcessing_codec);
            break;
          }
          case 64: {
            ErrorCode = (global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode) input.ReadEnum();
            break;
          }
          case 74: {
            audio_.AddEntriesFrom(input, _repeated_audio_codec);
            break;
          }
          case 82: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            ReadyUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            State = (global::Enfonica.Voice.V1Beta1.Recording.Types.State) input.ReadEnum();
            break;
          }
          case 32: {
            Source = (global::Enfonica.Voice.V1Beta1.Recording.Types.Source) input.ReadEnum();
            break;
          }
          case 42: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 48: {
            ChannelCount = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            postProcessing_.AddEntriesFrom(ref input, _repeated_postProcessing_codec);
            break;
          }
          case 64: {
            ErrorCode = (global::Enfonica.Voice.V1Beta1.Recording.Types.ErrorCode) input.ReadEnum();
            break;
          }
          case 74: {
            audio_.AddEntriesFrom(ref input, _repeated_audio_codec);
            break;
          }
          case 82: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            ReadyUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Recording message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The source of the recording.
      /// It is anticipated that additional values will be added in the future.
      /// </summary>
      public enum Source {
        /// <summary>
        /// Unspecified recording source.
        /// </summary>
        [pbr::OriginalName("SOURCE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The recording was created by the `&lt;Record>` action.
        /// </summary>
        [pbr::OriginalName("RECORD_ACTION")] RecordAction = 1,
        /// <summary>
        /// The recording was created by call recording.
        /// </summary>
        [pbr::OriginalName("CALL_RECORDING")] CallRecording = 2,
      }

      /// <summary>
      /// The state of the recording.
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified state.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The audio is currently being recorded, or recording has finished and the audio
        /// is pending processing.
        /// </summary>
        [pbr::OriginalName("PENDING")] Pending = 1,
        /// <summary>
        /// The audio has successfully been recorded.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 2,
        /// <summary>
        /// The audio that was recorded was completely silent.
        /// </summary>
        [pbr::OriginalName("EMPTY")] Empty = 3,
        /// <summary>
        /// The audio failed to be recorded due to a system error. For more information, see the
        /// value of error_code.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
      }

      /// <summary>
      /// Post processing options.
      /// </summary>
      public enum PostProcessing {
        /// <summary>
        /// Unspecified post processing.
        /// </summary>
        [pbr::OriginalName("POST_PROCESSING_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Trim silence from the start and end of the audio.
        /// </summary>
        [pbr::OriginalName("TRIM_SILENCE")] TrimSilence = 1,
      }

      /// <summary>
      /// Error code definitions.
      /// </summary>
      public enum ErrorCode {
        /// <summary>
        /// Unspecified error code.
        /// </summary>
        [pbr::OriginalName("ERROR_CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A timeout occurred, where a pending recording did not complete within the expected
        /// timeframe.
        /// </summary>
        [pbr::OriginalName("TIMEOUT")] Timeout = 1,
        /// <summary>
        /// An internal error occurred while processing the recording.
        /// </summary>
        [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Audio that is associated with a recording.
  /// </summary>
  public sealed partial class RecordingAudio : pb::IMessage<RecordingAudio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordingAudio> _parser = new pb::MessageParser<RecordingAudio>(() => new RecordingAudio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordingAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.RecordingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordingAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordingAudio(RecordingAudio other) : this() {
      mimeType_ = other.mimeType_;
      encoding_ = other.encoding_;
      sampleRate_ = other.sampleRate_;
      sizeBytes_ = other.sizeBytes_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordingAudio Clone() {
      return new RecordingAudio(this);
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 1;
    private string mimeType_ = "";
    /// <summary>
    /// The MIME type of the audio file. This will likely be "audio/x-wav" or "audio/mpeg".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encoding" field.</summary>
    public const int EncodingFieldNumber = 2;
    private global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding encoding_ = global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding.Unspecified;
    /// <summary>
    /// The encoding of the audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding Encoding {
      get { return encoding_; }
      set {
        encoding_ = value;
      }
    }

    /// <summary>Field number for the "sample_rate" field.</summary>
    public const int SampleRateFieldNumber = 3;
    private int sampleRate_;
    /// <summary>
    /// The sample rate of the audio. This will likely be 8000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SampleRate {
      get { return sampleRate_; }
      set {
        sampleRate_ = value;
      }
    }

    /// <summary>Field number for the "size_bytes" field.</summary>
    public const int SizeBytesFieldNumber = 4;
    private int sizeBytes_;
    /// <summary>
    /// The size of the audio in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SizeBytes {
      get { return sizeBytes_; }
      set {
        sizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 5;
    private string uri_ = "";
    /// <summary>
    /// An ephemeral URI that can be used to download the recording. The URI is valid for 60 minutes.
    /// Note that this field is only included in the FULL view.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordingAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordingAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MimeType != other.MimeType) return false;
      if (Encoding != other.Encoding) return false;
      if (SampleRate != other.SampleRate) return false;
      if (SizeBytes != other.SizeBytes) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (Encoding != global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding.Unspecified) hash ^= Encoding.GetHashCode();
      if (SampleRate != 0) hash ^= SampleRate.GetHashCode();
      if (SizeBytes != 0) hash ^= SizeBytes.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MimeType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MimeType);
      }
      if (Encoding != global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Encoding);
      }
      if (SampleRate != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SampleRate);
      }
      if (SizeBytes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SizeBytes);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MimeType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MimeType);
      }
      if (Encoding != global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Encoding);
      }
      if (SampleRate != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SampleRate);
      }
      if (SizeBytes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SizeBytes);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (Encoding != global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Encoding);
      }
      if (SampleRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRate);
      }
      if (SizeBytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeBytes);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordingAudio other) {
      if (other == null) {
        return;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.Encoding != global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding.Unspecified) {
        Encoding = other.Encoding;
      }
      if (other.SampleRate != 0) {
        SampleRate = other.SampleRate;
      }
      if (other.SizeBytes != 0) {
        SizeBytes = other.SizeBytes;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MimeType = input.ReadString();
            break;
          }
          case 16: {
            Encoding = (global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding) input.ReadEnum();
            break;
          }
          case 24: {
            SampleRate = input.ReadInt32();
            break;
          }
          case 32: {
            SizeBytes = input.ReadInt32();
            break;
          }
          case 42: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MimeType = input.ReadString();
            break;
          }
          case 16: {
            Encoding = (global::Enfonica.Voice.V1Beta1.RecordingAudio.Types.AudioEncoding) input.ReadEnum();
            break;
          }
          case 24: {
            SampleRate = input.ReadInt32();
            break;
          }
          case 32: {
            SizeBytes = input.ReadInt32();
            break;
          }
          case 42: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RecordingAudio message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The audio encoding used.
      /// It is anticipated that additional values will be added in the future.
      /// </summary>
      public enum AudioEncoding {
        /// <summary>
        /// Unspecified audio encoding.
        /// </summary>
        [pbr::OriginalName("AUDIO_ENCODING_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// PCM 16 bit per sample.
        /// </summary>
        [pbr::OriginalName("AUDIO_ENCODING_PCM_16BIT")] Pcm16Bit = 1,
        /// <summary>
        /// MP3 compressed.
        /// </summary>
        [pbr::OriginalName("AUDIO_ENCODING_MP3")] Mp3 = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The GetRecording request recording.
  /// </summary>
  public sealed partial class GetRecordingRequest : pb::IMessage<GetRecordingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRecordingRequest> _parser = new pb::MessageParser<GetRecordingRequest>(() => new GetRecordingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRecordingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.RecordingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecordingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecordingRequest(GetRecordingRequest other) : this() {
      name_ = other.name_;
      view_ = other.view_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecordingRequest Clone() {
      return new GetRecordingRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Recording to retrieve.
    /// Must be of the form `projects/*/calls/*/recordings/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 2;
    private global::Enfonica.Voice.V1Beta1.RecordingView view_ = global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified;
    /// <summary>
    /// Configuration of partial responses.
    /// Defaults to FULL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.RecordingView View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRecordingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRecordingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (View != other.View) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) hash ^= View.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) View);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) View);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) View);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRecordingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        View = other.View;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            View = (global::Enfonica.Voice.V1Beta1.RecordingView) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            View = (global::Enfonica.Voice.V1Beta1.RecordingView) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListRecordings request recording.
  /// </summary>
  public sealed partial class ListRecordingsRequest : pb::IMessage<ListRecordingsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRecordingsRequest> _parser = new pb::MessageParser<ListRecordingsRequest>(() => new ListRecordingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRecordingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.RecordingsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRecordingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRecordingsRequest(ListRecordingsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      view_ = other.view_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRecordingsRequest Clone() {
      return new ListRecordingsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The resource name of the parent of which to list recordings.
    /// May be of the form `projects/*/calls/*` to list the recordings of that
    /// specific call, or `projects/*` to list recordings across the entire project,
    /// which maps to `projects/*/calls/-`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of Recordings to return in the response.
    /// Default value of 10 and maximum value of 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous recording to `ListRecordings`
    /// that indicates where this listing should continue from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 4;
    private global::Enfonica.Voice.V1Beta1.RecordingView view_ = global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified;
    /// <summary>
    /// Configuration of partial responses.
    /// Defaults to BASIC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Enfonica.Voice.V1Beta1.RecordingView View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRecordingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRecordingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (View != other.View) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) hash ^= View.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) View);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) View);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) View);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRecordingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.View != global::Enfonica.Voice.V1Beta1.RecordingView.Unspecified) {
        View = other.View;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            View = (global::Enfonica.Voice.V1Beta1.RecordingView) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            View = (global::Enfonica.Voice.V1Beta1.RecordingView) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The ListRecordings response recording.
  /// </summary>
  public sealed partial class ListRecordingsResponse : pb::IMessage<ListRecordingsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRecordingsResponse> _parser = new pb::MessageParser<ListRecordingsResponse>(() => new ListRecordingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRecordingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.RecordingsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRecordingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRecordingsResponse(ListRecordingsResponse other) : this() {
      recordings_ = other.recordings_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRecordingsResponse Clone() {
      return new ListRecordingsResponse(this);
    }

    /// <summary>Field number for the "recordings" field.</summary>
    public const int RecordingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Enfonica.Voice.V1Beta1.Recording> _repeated_recordings_codec
        = pb::FieldCodec.ForMessage(10, global::Enfonica.Voice.V1Beta1.Recording.Parser);
    private readonly pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Recording> recordings_ = new pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Recording>();
    /// <summary>
    /// A possibly paginated list of Recordings that are direct descendants of
    /// the specified parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Enfonica.Voice.V1Beta1.Recording> Recordings {
      get { return recordings_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A pagination token returned from a previous recording to `ListRecordings`
    /// that indicates from where listing should continue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRecordingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRecordingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!recordings_.Equals(other.recordings_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= recordings_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      recordings_.WriteTo(output, _repeated_recordings_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      recordings_.WriteTo(ref output, _repeated_recordings_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += recordings_.CalculateSize(_repeated_recordings_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRecordingsResponse other) {
      if (other == null) {
        return;
      }
      recordings_.Add(other.recordings_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            recordings_.AddEntriesFrom(input, _repeated_recordings_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            recordings_.AddEntriesFrom(ref input, _repeated_recordings_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The DeleteRecording request message.
  /// </summary>
  public sealed partial class DeleteRecordingRequest : pb::IMessage<DeleteRecordingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteRecordingRequest> _parser = new pb::MessageParser<DeleteRecordingRequest>(() => new DeleteRecordingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRecordingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Enfonica.Voice.V1Beta1.RecordingsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRecordingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRecordingRequest(DeleteRecordingRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRecordingRequest Clone() {
      return new DeleteRecordingRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Recording to be deleted.
    /// Must be of the form `projects/*/calls/*/recording/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRecordingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRecordingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRecordingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
